<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Lazy Rodriguez</title>
    <link>http://lazyrodi.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Thu, 09 Feb 2017 15:09:23 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[Electron] Hello world</title>
      <link>http://lazyrodi.github.io/2017/02/09/2017-02-09-etc-install-electron/</link>
      <guid>http://lazyrodi.github.io/2017/02/09/2017-02-09-etc-install-electron/</guid>
      <pubDate>Thu, 09 Feb 2017 11:46:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;a href=&quot;http://electron.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Electron&lt;/a&gt;은 뜨고있는 JavaScript 기반의 Cross Platform Desktop Application 제작
      
      </description>
      
      <content:encoded>&lt;p&gt;&lt;a href=&quot;http://electron.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Electron&lt;/a&gt;은 뜨고있는 JavaScript 기반의 Cross Platform Desktop Application 제작 툴이다.&lt;/p&gt;
&lt;p&gt;홈페이지에서 직접 다음과 같이 설명하고 있다.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If you can build a website, you can build a desktop app. Electron is a framework for creating native applications with web technologies like JavaScript, HTML, and CSS. It takes care of the hard parts so you can focus on the core of your application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Download&quot;&gt;&lt;a href=&quot;#Download&quot; class=&quot;headerlink&quot; title=&quot;Download&quot;&gt;&lt;/a&gt;Download&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://electron.atom.io/releases/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://electron.atom.io/releases/&lt;/a&gt;에서 직접 Download가 가능하다. (하지만 나는 네트워크가 잘 안 맞는지 계속 실패해서 화가 치밀었다.)&lt;/p&gt;
&lt;p&gt;중국 서버 (&lt;a href=&quot;https://npm.taobao.org/mirrors/electron/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://npm.taobao.org/mirrors/electron/&lt;/a&gt;) 는 좀 받을만하다.&lt;/p&gt;
&lt;p&gt;PC에 npm이 설치되어 있다면, 아래 명령어로 Download 받을 수도 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Install as a development dependency&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install electron --save-dev&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Install the `electron` command globally in your $PATH&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install electron -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;한글로 된 &lt;a href=&quot;https://github.com/electron/electron/tree/master/docs-translations/ko-KR&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;튜토리얼&lt;/a&gt; 문서가 있으니 보시라.&lt;/p&gt;
&lt;h1 id=&quot;설치&quot;&gt;&lt;a href=&quot;#설치&quot; class=&quot;headerlink&quot; title=&quot;설치&quot;&gt;&lt;/a&gt;설치&lt;/h1&gt;&lt;p&gt;Windows 기준으로 설치는 압축만 풀면 된다.&lt;/p&gt;
&lt;p&gt;압축을 풀면 &lt;code&gt;electron.exe&lt;/code&gt; 파일이 생성되고, 아래처럼 실행된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017-02-09-etc-install-electron-001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;아직 아무것도 모르지만 뭔가 잘 해놨다는 느낌이 온다.&lt;/p&gt;
&lt;h1 id=&quot;Hello-world&quot;&gt;&lt;a href=&quot;#Hello-world&quot; class=&quot;headerlink&quot; title=&quot;Hello world&quot;&gt;&lt;/a&gt;Hello world&lt;/h1&gt;&lt;p&gt;Electron application의 기본 구성은 다음과 같다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;your-app/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── package.json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── main.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── index.html&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;package-json&quot;&gt;&lt;a href=&quot;#package-json&quot; class=&quot;headerlink&quot; title=&quot;package.json&quot;&gt;&lt;/a&gt;package.json&lt;/h2&gt;&lt;p&gt;Application 정보를 나타내며, 여기서 &lt;code&gt;main&lt;/code&gt;에 지정하는 &lt;code&gt;.js 파일&lt;/code&gt; 은 &lt;code&gt;entry point&lt;/code&gt;를 의미한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main&lt;/code&gt; 지정한 &lt;code&gt;main.js&lt;/code&gt;에서 Window를 만들고 System event를 처리해야 한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main&lt;/code&gt; 에서 아무런 &lt;code&gt;.js&lt;/code&gt;파일을 지정하지 않았다면, 자동으로 &lt;code&gt;index.js&lt;/code&gt;파일이 있는지 찾게 된다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;    : &lt;span class=&quot;string&quot;&gt;&quot;your-app&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;    : &lt;span class=&quot;string&quot;&gt;&quot;main.js&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;main-js&quot;&gt;&lt;a href=&quot;#main-js&quot; class=&quot;headerlink&quot; title=&quot;main.js&quot;&gt;&lt;/a&gt;main.js&lt;/h2&gt;&lt;p&gt;일단 모를 때는 베끼고 보자.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123;app, BrowserWindow&amp;#125; = require(&lt;span class=&quot;string&quot;&gt;&#39;electron&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; path = require(&lt;span class=&quot;string&quot;&gt;&#39;path&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; url = require(&lt;span class=&quot;string&quot;&gt;&#39;url&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 윈도우 객체를 전역에 유지합니다. 만약 이렇게 하지 않으면&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 자바스크립트 GC가 일어날 때 창이 멋대로 닫혀버립니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;let win&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function &lt;span class=&quot;title&quot;&gt;createWindow&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 새로운 브라우저 창을 생성합니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  win = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BrowserWindow(&amp;#123;width: &lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;, height: &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 그리고 현재 디렉터리의 index.html을 로드합니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  win.loadURL(url.format(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pathname: path.join(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    protocol: &lt;span class=&quot;string&quot;&gt;&#39;file:&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    slashes: &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 개발자 도구를 엽니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  win.webContents.openDevTools()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 창이 닫히면 호출됩니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  win.on(&lt;span class=&quot;string&quot;&gt;&#39;closed&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 윈도우 객체의 참조를 삭제합니다. 보통 멀티 윈도우 지원을 위해&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 윈도우 객체를 배열에 저장하는 경우가 있는데 이 경우&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 해당하는 모든 윈도우 객체의 참조를 삭제해 주어야 합니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    win = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 이 메서드는 Electron의 초기화가 끝나면 실행되며 브라우저&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 윈도우를 생성할 수 있습니다. 몇몇 API는 이 이벤트 이후에만&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 사용할 수 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;app.on(&lt;span class=&quot;string&quot;&gt;&#39;ready&#39;&lt;/span&gt;, createWindow)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 모든 창이 닫히면 애플리케이션 종료.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;app.on(&lt;span class=&quot;string&quot;&gt;&#39;window-all-closed&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// macOS의 대부분의 애플리케이션은 유저가 Cmd + Q 커맨드로 확실하게&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 종료하기 전까지 메뉴바에 남아 계속 실행됩니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (process.platform !== &lt;span class=&quot;string&quot;&gt;&#39;darwin&#39;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    app.quit()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;app.on(&lt;span class=&quot;string&quot;&gt;&#39;activate&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// macOS에선 보통 독 아이콘이 클릭되고 나서도&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 열린 윈도우가 없으면, 새로운 윈도우를 다시 만듭니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (win === &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    createWindow()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 이 파일엔 제작할 애플리케이션에 특화된 메인 프로세스 코드를&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 포함할 수 있습니다. 또한 파일을 분리하여 require하는 방법으로&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 코드를 작성할 수도 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;index-html&quot;&gt;&lt;a href=&quot;#index-html&quot; class=&quot;headerlink&quot; title=&quot;index.html&quot;&gt;&lt;/a&gt;index.html&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;헬로 월드!&amp;lt;/title&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;h1&amp;gt;헬로 월드!&amp;lt;/h1&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    이 애플리케이션은 node &amp;lt;script&amp;gt;document.write(process.version)&amp;lt;/script&amp;gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Chrome &amp;lt;script&amp;gt;document.write(process.versions.chrome)&amp;lt;/script&amp;gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Electron &amp;lt;script&amp;gt;document.write(process.versions.electron)&amp;lt;/script&amp;gt;을 사용합니다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Build&quot;&gt;&lt;a href=&quot;#Build&quot; class=&quot;headerlink&quot; title=&quot;Build&quot;&gt;&lt;/a&gt;Build&lt;/h1&gt;&lt;p&gt;아까 위에서 &lt;code&gt;electron.exe&lt;/code&gt;를 실행시켰을 때 나온 가이드처럼 빌드해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;electron.exe 내가앱을넣어둔경로&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;해보고 나서 깨닫는다. ‘아 이거 빌드가 아니네.’ (…)&lt;/p&gt;
&lt;p&gt;그렇다. 바로 실행된 화면이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017-02-09-etc-install-electron-002.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;다시-한-번-배포를-위해-Build-도전&quot;&gt;&lt;a href=&quot;#다시-한-번-배포를-위해-Build-도전&quot; class=&quot;headerlink&quot; title=&quot;다시 한 번, 배포를 위해 Build 도전&quot;&gt;&lt;/a&gt;다시 한 번, 배포를 위해 Build 도전&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs-translations/ko-KR/tutorial/application-distribution.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;애플리케이션 배포&lt;/a&gt; 를 참고하여 진행해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1. 처음 Electron을 Downlaod 받은 폴더로 이동한다. (`electron.exe`가 있는 곳)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2. 그 아래 `/resources` 로 가서 `/app` 이라는 이름의 폴더를 생성한다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3. 그리고 그 아래 위에서 만들었던 Application 파일 세 개를 넣는다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4. 다시 `electron.exe` 가 있던 폴더로 이동하여 `electron.exe`를 실행시켜본다. 실행되는 것을 확인할 수 있다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5. 그러면 이제 이 폴더들을 통째로 압축하여 전달하면 된다.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;아… 뭔가 이상하다. 내가 원하는 건 이런게 아니다. Hello world가 134 MB라니?&lt;/p&gt;
&lt;p&gt;게다가 이것도 Build라고 하기엔 좀 그렇다.&lt;/p&gt;
&lt;h1 id=&quot;Packaging을-해본다&quot;&gt;&lt;a href=&quot;#Packaging을-해본다&quot; class=&quot;headerlink&quot; title=&quot;Packaging을 해본다.&quot;&gt;&lt;/a&gt;Packaging을 해본다.&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs-translations/ko-KR/tutorial/application-packaging.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;애플리케이션 패키징&lt;/a&gt; 을 보니… &lt;code&gt;asar&lt;/code&gt; 을 설치해야 한다.&lt;/p&gt;
&lt;p&gt;설치하자.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install asar -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;처음에 Application을 만들었던 디렉토리로 이동하여 아래 명령어를 실행한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;asar pack helloworld(디렉토리명) helloworld.asar&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;helloworld.asar&lt;/code&gt; 파일이 생기긴 했는데, 알고보니 이것도 실행 파일은 아니고 &lt;code&gt;electron.exe&lt;/code&gt; 실행 후 넣으면 되는 것이다. 그냥 소스를 숨기는 용도이다.&lt;/p&gt;
&lt;h1 id=&quot;electron-packager-사용&quot;&gt;&lt;a href=&quot;#electron-packager-사용&quot; class=&quot;headerlink&quot; title=&quot;electron-packager 사용&quot;&gt;&lt;/a&gt;electron-packager 사용&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install electron-packager -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;이번 삽질이 마지막이기를 바라며 명령을 실행해본다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;electron-packager&lt;/code&gt;에 대한 명령어는 &lt;a href=&quot;https://github.com/electron-userland/electron-packager/blob/master/usage.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/electron-userland/electron-packager/blob/master/usage.txt&lt;/a&gt; 에서도 확인할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;electron-packager [App 경로] --platform=win32 --arch x64 --out dist&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;아래와 같은 에러가 발생했다. 야호 신난다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Unable to determine Electron version. Please specify an Electron version&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;For more information, please see&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;https://github.com/electron-userland/electron-packager/blob/master/docs/api.md&lt;span class=&quot;comment&quot;&gt;#version&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;electron version까지 지정해줘야 하나보다.&lt;/p&gt;
&lt;p&gt;불안하니 최신 말고 이전 버전을 넣어보자.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;electron-packager [App 경로] --platform=win32 --arch x64 --out dist --electron-version 1.4.13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;무언가 실행이 된다. 굉장히 오래 걸린다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Downloading electron-v1.4.13-win32-x64.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[=&amp;gt;                                        ] 5.6% of 54.34 MB (25.18 kB/s)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;그러더니 에러가 났다… &lt;/p&gt;
&lt;p&gt;안해!!!!&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Downloading electron-v1.4.13-win32-x64.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Error: &lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt; ENCONNRESET&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt; ECONNRESET&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://electron.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://electron.atom.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/electron&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/electron/electron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://electron.atom.io/releases/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://electron.atom.io/releases/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://proinlab.com/archives/1928&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://proinlab.com/archives/1928&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2017/02/09/2017-02-09-etc-install-electron/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Sonarqube] 설치하기</title>
      <link>http://lazyrodi.github.io/2017/02/06/2017-02-06-etc-install-sonarqube/</link>
      <guid>http://lazyrodi.github.io/2017/02/06/2017-02-06-etc-install-sonarqube/</guid>
      <pubDate>Mon, 06 Feb 2017 11:46:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;a href=&quot;https://www.sonarqube.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SonarQube&lt;/a&gt;는 우연히 알게된 Tool로 코드 품질 관리 툴이다.&lt;/p&gt;
&lt;p&gt;회사에서 개인적으로 사용하고 있다.
      
      </description>
      
      <content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.sonarqube.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SonarQube&lt;/a&gt;는 우연히 알게된 Tool로 코드 품질 관리 툴이다.&lt;/p&gt;
&lt;p&gt;회사에서 개인적으로 사용하고 있다.&lt;/p&gt;
&lt;p&gt;젠킨스 등의 CI 툴과도 연계(&lt;a href=&quot;https://www.sonarqube.org/features/integration/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.sonarqube.org/features/integration/&lt;/a&gt;)가 가능하여 잘 사용하면 파워풀하게 사용할 수도 있다.&lt;/p&gt;
&lt;p&gt;개인적인 사용을 위해서는 별로 세팅할 것도 없이 그냥 사용하면 된다.&lt;/p&gt;
&lt;h1 id=&quot;SonarQube-Download-amp-Run&quot;&gt;&lt;a href=&quot;#SonarQube-Download-amp-Run&quot; class=&quot;headerlink&quot; title=&quot;SonarQube Download &amp;amp; Run&quot;&gt;&lt;/a&gt;SonarQube Download &amp;amp; Run&lt;/h1&gt;&lt;p&gt;SonarQube의 홈페이지 (&lt;a href=&quot;https://www.sonarqube.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.sonarqube.org&lt;/a&gt;)에서 Download만 하면 별도의 설치 없이 실행이 가능하다.&lt;/p&gt;
&lt;p&gt;압축을 푼 후 &lt;code&gt;...\sonarqube-6.2\bin\windows-x86-64&lt;/code&gt; 아래의 &lt;code&gt;StartSonar.bat&lt;/code&gt; 파일을 실행하면 웹 서버가 실행되며 브라우저를 통해 &lt;code&gt;localhost:9000&lt;/code&gt; 으로 접속하면 아래와 같은 화면을 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017-02-06-etc-install-sonarqube-001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;SonarQube-Scanner-Download&quot;&gt;&lt;a href=&quot;#SonarQube-Scanner-Download&quot; class=&quot;headerlink&quot; title=&quot;SonarQube Scanner Download&quot;&gt;&lt;/a&gt;SonarQube Scanner Download&lt;/h1&gt;&lt;p&gt;소스를 연동시켜서 확인하기 위해서는 SonarQube Scanner(&lt;a href=&quot;https://docs.sonarqube.org/display/SCAN/Analyzing+Source+Code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.sonarqube.org/display/SCAN/Analyzing+Source+Code&lt;/a&gt;)를 사용해야 한다.&lt;/p&gt;
&lt;p&gt;Download 받은 후 압축을 풀고 &lt;code&gt;bin&lt;/code&gt; 폴더를 환경 변수에 추가하여 편하게 사용하자.&lt;/p&gt;
&lt;h1 id=&quot;소스-연동&quot;&gt;&lt;a href=&quot;#소스-연동&quot; class=&quot;headerlink&quot; title=&quot;소스 연동&quot;&gt;&lt;/a&gt;소스 연동&lt;/h1&gt;&lt;h2 id=&quot;환경설정-파일-생성&quot;&gt;&lt;a href=&quot;#환경설정-파일-생성&quot; class=&quot;headerlink&quot; title=&quot;환경설정 파일 생성&quot;&gt;&lt;/a&gt;환경설정 파일 생성&lt;/h2&gt;&lt;p&gt;Project에 대한 환경설정 파일을 생성하여야 한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Analyzing with SonarQube Scanner&lt;/a&gt; Page를 참고하여 &lt;code&gt;sonar-project.properties&lt;/code&gt; 파일을 생성하여 소스의 root 폴더에 저장한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sonar.projectKey=TestProject&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# this is the name and version displayed in the SonarQube UI. Was mandatory prior to SonarQube 6.1.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sonar.projectName=My project&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sonar.projectVersion=1.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Path is relative to the sonar-project.properties file. Replace &quot;\&quot; by &quot;/&quot; on Windows.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Since SonarQube 4.2, this property is optional if sonar.modules is set. &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# If not set, SonarQube starts looking for source code from the directory containing &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# the sonar-project.properties file.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sonar.sources=.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Encoding of the source code. Default is default system encoding&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#sonar.sourceEncoding=UTF-8&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Scan&quot;&gt;&lt;a href=&quot;#Scan&quot; class=&quot;headerlink&quot; title=&quot;Scan !&quot;&gt;&lt;/a&gt;Scan !&lt;/h2&gt;&lt;p&gt;Windows의 Command window를 이용하여 소스가 있는 폴더로 이동하자.&lt;/p&gt;
&lt;p&gt;아래 명령어로 소스를 Scan 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt; sonar-scanner&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;다음과 같이 scan이 성공하면 브라우저에서 &lt;code&gt;localhost:9000&lt;/code&gt;으로 다시 접속하자. 그러면 프로젝트가 추가된 것을 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017-02-06-etc-install-sonarqube-002.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017-02-06-etc-install-sonarqube-003.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;사용한 소스는 아래와 같다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.test.sonarqube;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.regex.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; three = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String STRING_VAR;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; t = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        a = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (t == &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;-&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        List&amp;lt;String&amp;gt; listA = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        listA.add(&lt;span class=&quot;string&quot;&gt;&quot;add&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;확인&quot;&gt;&lt;a href=&quot;#확인&quot; class=&quot;headerlink&quot; title=&quot;확인&quot;&gt;&lt;/a&gt;확인&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Projects&lt;/code&gt; 메뉴에서 위에서 생성한 &lt;code&gt;My Project&lt;/code&gt; 를 선택하여 들어가면 아래와 같은 화면을 볼 수 있다.&lt;/p&gt;
&lt;p&gt;소스에 존재하는 Bug, Vulnerability, Code Smell, 이를 수정하기 위해 필요한 예상 시간인 Debt, Duplicated code 등의 현황을 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017-02-06-etc-install-sonarqube-004.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;사용하기 나름이지만, 나는 &lt;code&gt;code&lt;/code&gt; 메뉴를 통해 파일 별로 보는 것을 선호한다.&lt;/p&gt;
&lt;p&gt;문제가 되는 라인마다 folding 버튼이 나타나고, 클릭하면 무엇이 문제인지 보여준다.&lt;/p&gt;
&lt;p&gt;여기서 &lt;code&gt;...&lt;/code&gt; 버튼을 누르면 아래쪽에 해결책까지 보여준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017-02-06-etc-install-sonarqube-005.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sonarqube.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.sonarqube.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.sonarsource.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://blog.sonarsource.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.sonarqube.org/display/SCAN/Analyzing+Source+Code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.sonarqube.org/display/SCAN/Analyzing+Source+Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2017/02/06/2017-02-06-etc-install-sonarqube/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Android Vector Image</title>
      <link>http://lazyrodi.github.io/2016/08/28/2016-08-28-android-vector-image/</link>
      <guid>http://lazyrodi.github.io/2016/08/28/2016-08-28-android-vector-image/</guid>
      <pubDate>Sun, 28 Aug 2016 05:47:50 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;&lt;p&gt;Android 5.0 (Lollipop) 부터 지원합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Android Studio &amp;gt; File &amp;gt; New &amp;gt; Vector Asset&lt;/code&gt; 으로 Vec
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;&lt;p&gt;Android 5.0 (Lollipop) 부터 지원합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Android Studio &amp;gt; File &amp;gt; New &amp;gt; Vector Asset&lt;/code&gt; 으로 Vector Asset Studio를 실행할 수 있다.&lt;/p&gt;
&lt;p&gt;이미 그려둔 SVG이미지가 있다면 그것을 로딩하면 되고, Material Icon을 SVG로 변환할 수 있다.&lt;/p&gt;
&lt;p&gt;아무거나 골라서 &lt;code&gt;Next &amp;gt; Finish&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Vector image를 사용하게 되면 크기가 확대되어도 화면에 깨지지 않고 보이게 된다.&lt;/p&gt;
&lt;p&gt;아래의 미묘한 차이를 보라!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-28-android-vector-image-001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/28/2016-08-28-android-vector-image/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MediaRecorder</title>
      <link>http://lazyrodi.github.io/2016/08/27/2016-08-27-android-mediarecorder/</link>
      <guid>http://lazyrodi.github.io/2016/08/27/2016-08-27-android-mediarecorder/</guid>
      <pubDate>Sat, 27 Aug 2016 13:47:50 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/media/audio-capture.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://develope
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/media/audio-capture.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/guide/topics/media/audio-capture.html&lt;/a&gt; 의 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Audio-Capture&quot;&gt;&lt;a href=&quot;#Audio-Capture&quot; class=&quot;headerlink&quot; title=&quot;Audio Capture&quot;&gt;&lt;/a&gt;Audio Capture&lt;/h1&gt;&lt;p&gt;Android multimedia framework은 다양한 오디오 형식의 획득(capture) 및 인코딩을 지원하여 application 작성 시 쉽게 사용할 수 있다. 이 때 &lt;a href=&quot;https://developer.android.com/reference/android/media/MediaRecorder.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MediaRecorder&lt;/a&gt; API를 사용하면 하드웨어 자원을 사용할 수 있다.&lt;/p&gt;
&lt;h2 id=&quot;Performing-Audio-Capture&quot;&gt;&lt;a href=&quot;#Performing-Audio-Capture&quot; class=&quot;headerlink&quot; title=&quot;Performing Audio Capture&quot;&gt;&lt;/a&gt;Performing Audio Capture&lt;/h2&gt;&lt;p&gt;Audio capture 기능을 사용하기 위해서는 다음과 같은 과정들이 필요하다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;android.media.MediaRecorder의 새 개체(instance)를 생성.&lt;/li&gt;
&lt;li&gt;MediaRecorder.setAudioSource() 로 사용할 audio source를 설정. 보통 MediaRecorder.AudioSource.MIC가 된다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.setOutputFormat() 으로 출력 파일의 형식을 설정.&lt;/li&gt;
&lt;li&gt;MediaRecorder.setOutputFile() 로 출력 파일의 이름을 설정.&lt;/li&gt;
&lt;li&gt;MediaRecorder.setAudioEncoder() 로 audio encoder를 설정.&lt;/li&gt;
&lt;li&gt;MediaRecorder.prepare() 를 호출.&lt;/li&gt;
&lt;li&gt;MediaRecorder.start() 로 녹음 시작.&lt;/li&gt;
&lt;li&gt;MediaRecorder.stop() 으로 녹음 종료.&lt;/li&gt;
&lt;li&gt;사용이 끝나면 MediaRecorder.release()를 호출.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Statement-diagram&quot;&gt;&lt;a href=&quot;#Statement-diagram&quot; class=&quot;headerlink&quot; title=&quot;Statement diagram&quot;&gt;&lt;/a&gt;Statement diagram&lt;/h2&gt;&lt;p&gt;MediaRecorder는 아래와 같은 state machine으로 동작한다.&lt;/p&gt;
&lt;p&gt;위의 1~9 번 과정이 이루어져야 하는 이유이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://developer.android.com/images/mediarecorder_state_diagram.gif&quot; alt=&quot;https://developer.android.com/images/mediarecorder_state_diagram.gif&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;예제-코드&quot;&gt;&lt;a href=&quot;#예제-코드&quot; class=&quot;headerlink&quot; title=&quot;예제 코드&quot;&gt;&lt;/a&gt;예제 코드&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/media/audio-capture.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/guide/topics/media/audio-capture.html&lt;/a&gt; 제공&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;151&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;153&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;154&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;155&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;156&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;157&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;158&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;159&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;160&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;161&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;162&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;163&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;164&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;165&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;166&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;167&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;168&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;169&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;170&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;171&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;172&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;173&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;174&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;175&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;176&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * The application needs to have the permission to write to external storage&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * if the output file is written to the external storage, and also the&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * permission to record audio. These permissions must be set in the&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * application&#39;s AndroidManifest.xml file, with something like:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &amp;lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &amp;lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.android.audiorecordtest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.LinearLayout;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Environment;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.view.ViewGroup;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.Button;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.view.View;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.view.View.OnClickListener;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.content.Context;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.util.Log;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.media.MediaRecorder;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.media.MediaPlayer;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AudioRecordTest&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String LOG_TAG = &lt;span class=&quot;string&quot;&gt;&quot;AudioRecordTest&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String mFileName = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; RecordButton mRecordButton = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MediaRecorder mRecorder = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; PlayButton   mPlayButton = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MediaPlayer   mPlayer = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onRecord&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; start)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (start) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            startRecording();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            stopRecording();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPlay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; start)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (start) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            startPlaying();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            stopPlaying();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startPlaying&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mPlayer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaPlayer();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mPlayer.setDataSource(mFileName);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mPlayer.prepare();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mPlayer.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Log.e(LOG_TAG, &lt;span class=&quot;string&quot;&gt;&quot;prepare() failed&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stopPlaying&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mPlayer.release();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mPlayer = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startRecording&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaRecorder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder.setOutputFile(mFileName);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mRecorder.prepare();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Log.e(LOG_TAG, &lt;span class=&quot;string&quot;&gt;&quot;prepare() failed&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stopRecording&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder.stop();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder.release();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecorder = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RecordButton&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Button&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; mStartRecording = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        OnClickListener clicker = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnClickListener() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                onRecord(mStartRecording);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStartRecording) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    setText(&lt;span class=&quot;string&quot;&gt;&quot;Stop recording&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    setText(&lt;span class=&quot;string&quot;&gt;&quot;Start recording&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                mStartRecording = !mStartRecording;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RecordButton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context ctx)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(ctx);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            setText(&lt;span class=&quot;string&quot;&gt;&quot;Start recording&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            setOnClickListener(clicker);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PlayButton&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Button&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; mStartPlaying = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        OnClickListener clicker = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnClickListener() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                onPlay(mStartPlaying);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStartPlaying) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    setText(&lt;span class=&quot;string&quot;&gt;&quot;Stop playing&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    setText(&lt;span class=&quot;string&quot;&gt;&quot;Start playing&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                mStartPlaying = !mStartPlaying;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PlayButton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context ctx)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(ctx);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            setText(&lt;span class=&quot;string&quot;&gt;&quot;Start playing&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            setOnClickListener(clicker);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AudioRecordTest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mFileName = Environment.getExternalStorageDirectory().getAbsolutePath();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mFileName += &lt;span class=&quot;string&quot;&gt;&quot;/audiorecordtest.3gp&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle icicle)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(icicle);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        LinearLayout ll = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinearLayout(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mRecordButton = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RecordButton(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ll.addView(mRecordButton,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinearLayout.LayoutParams(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ViewGroup.LayoutParams.WRAP_CONTENT,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ViewGroup.LayoutParams.WRAP_CONTENT,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mPlayButton = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PlayButton(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ll.addView(mPlayButton,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinearLayout.LayoutParams(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ViewGroup.LayoutParams.WRAP_CONTENT,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ViewGroup.LayoutParams.WRAP_CONTENT,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setContentView(ll);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onPause();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRecorder != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mRecorder.release();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mRecorder = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlayer != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mPlayer.release();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mPlayer = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Capturing-videos&quot;&gt;&lt;a href=&quot;#Capturing-videos&quot; class=&quot;headerlink&quot; title=&quot;Capturing videos&quot;&gt;&lt;/a&gt;Capturing videos&lt;/h1&gt;&lt;p&gt;Camera 객체는 API 21에서 변경이 있었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이전: &lt;a href=&quot;https://developer.android.com/reference/android/hardware/Camera.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Camera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;이후: &lt;a href=&quot;https://developer.android.com/reference/android/hardware/camera2/package-summary.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android.hardware.camera2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아무튼, &lt;code&gt;MediaRecorder&lt;/code&gt;와 함께 &lt;code&gt;Camera&lt;/code&gt;를 제어할 수 있다. Camera 녹화를 시작할 때에는 반드시 &lt;code&gt;Camera.lock()&lt;/code&gt;, &lt;code&gt;Camera.unlock()&lt;/code&gt;을 통해 MediaRecorder가 camera 하드웨어에 접근할 수 있게 하고 &lt;code&gt;Camera.open()&lt;/code&gt;, &lt;code&gt;Camera.release()&lt;/code&gt;를 호출할 수 있다.&lt;/p&gt;
&lt;p&gt;Android 4.0 (API 14)부터 Camera.lock()과 Camera.unlock()은 자동으로 제어된다.&lt;/p&gt;
&lt;p&gt;사진을 찍는 것과는 달리 Video 녹화는 호출 순서가 세분화되어있다. 아래의 순서를 반드시 따라야 한다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Camera.open() 을 통해 Camera 객체를 가져온다.&lt;/li&gt;
&lt;li&gt;Camera.setPreviewDisplay() 를 통해 SurfaceView에 접근하고 liver camera image를 준비한다.&lt;/li&gt;
&lt;li&gt;Camera.startPreview() 를 호출하여 liver camera image를 보여준다.&lt;/li&gt;
&lt;li&gt;Camera.unlock() 한다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.setCamera() 로 사용할 camera를 선택한다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.setAudioSource() 로 audio source를 선택한다. MediaRecorder.AudioSource.CAMCORDER 를 사용한다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.setVideoSource() 로 video source를 선택한다. MediaRecorder.VideoSource.CAMERA 를 사용한다.&lt;/li&gt;
&lt;li&gt;출력 파일 및 인코딩을 설정한다.&lt;br&gt;8.1. Android 2.2까지&lt;ul&gt;
&lt;li&gt;setOutputFormat(): Default는 MediaRecorder.OutputFormat.MPEG_4&lt;/li&gt;
&lt;li&gt;setAudioEncoder(): Default는 MediaRecorder.AudioEncoder.AMR_NB&lt;/li&gt;
&lt;li&gt;setVideoEncoder(): Default는 MediaRecorder.VideoEncoder.MPEG_4_SP&lt;br&gt;8.2. Android 2.2 (API 8) 이상&lt;/li&gt;
&lt;li&gt;MediaRecorder.setProfile 메소드를 사용하며, CamcorderProfile.get() 으로 프로필 개체를 가져온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;setOutputFile() 로 출력 파일을 설정한다. getOutputMediaFile(MEDIA_TYPE_VIDEO).toString() 을 사용하며, &lt;a href=&quot;https://developer.android.com/guide/topics/media/camera.html#saving-media&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Saving Media Files&lt;/a&gt;에서 예제를 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;setPreviewDisplay() 를 통해 preview를 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.prepare()를 호출하여 설정사항을 준비한다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.start() 로 시작한다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.stop() 으로 중지한다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.reset() 으로 설정사항을 제거한다. 이 과정은 선택 사항이다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.release() 로 MediaRecorder를 release한다.&lt;/li&gt;
&lt;li&gt;Camera.lock() 으로 잠근다. Android 4.0(API 14)부터는 MediaRecorder.prepare()의 호출이 실패하지 않는다면 이 작업은 필요없다.&lt;/li&gt;
&lt;li&gt;Camera.stopPreview() 로 preview를 중지한다.&lt;/li&gt;
&lt;li&gt;Camera.release() 로 Camera를 release한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;&lt;p&gt;MediaRecorder를 이용하여 Camera preview를 생성하지 않고 몇 개의 단계를 건너뛸 수 있지만 일반적으로는 그렇게 하지 않기 때문에 여기서 다루지는 않는다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Application에서 Video 녹화를 빈번하게 사용한다면 setRecordingHint(boolean)을 사용하여 시간을 아낄 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Configure-MediaRecorder&quot;&gt;&lt;a href=&quot;#Configure-MediaRecorder&quot; class=&quot;headerlink&quot; title=&quot;Configure MediaRecorder&quot;&gt;&lt;/a&gt;Configure MediaRecorder&lt;/h2&gt;&lt;p&gt;MediaRecorder를 사용하여 Video 녹화를 할 때, 설정사항을 체크하고 구현하기 위해 MediaRecorder.prepare()를 호출해야만 한다. 아래의 예제는 그 과정을 나타낸 좋은 예제이다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareVideoRecorder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mCamera = getCameraInstance();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mMediaRecorder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaRecorder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Step 1: Unlock and set camera to MediaRecorder&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mCamera.unlock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mMediaRecorder.setCamera(mCamera);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Step 2: Set sources&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.CAMCORDER);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mMediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Step 3: Set a CamcorderProfile (requires API Level 8 or higher)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mMediaRecorder.setProfile(CamcorderProfile.get(CamcorderProfile.QUALITY_HIGH));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Step 4: Set output file&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mMediaRecorder.setOutputFile(getOutputMediaFile(MEDIA_TYPE_VIDEO).toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Step 5: Set the preview output&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mMediaRecorder.setPreviewDisplay(mPreview.getHolder().getSurface());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Step 6: Prepare configured MediaRecorder&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mMediaRecorder.prepare();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IllegalStateException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;IllegalStateException preparing MediaRecorder: &quot;&lt;/span&gt; + e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        releaseMediaRecorder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;IOException preparing MediaRecorder: &quot;&lt;/span&gt; + e.getMessage());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        releaseMediaRecorder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Android 2.2(API 8)까지는 출력 형식 및 인코딩 형식에 대해 CamcorderProfile를 사용하지 않고 아래 코드처럼 직접 설정했어야 했다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Step 3: Set output format and encoding (for versions prior to API Level 8)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mMediaRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.DEFAULT);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;아래의 설정값들은 MediaRecorder에 의해 기본으로 설정되지만 원하는대로 변경할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setViedeoEncodingBitRate()&lt;/li&gt;
&lt;li&gt;setVideoSize()&lt;/li&gt;
&lt;li&gt;setVideoFrameRate()&lt;/li&gt;
&lt;li&gt;setAudioEncodingBitRate()&lt;/li&gt;
&lt;li&gt;setAudioChannels()&lt;/li&gt;
&lt;li&gt;setAudioSamplingRate()&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Starting-and-stopping-MediaRecorder&quot;&gt;&lt;a href=&quot;#Starting-and-stopping-MediaRecorder&quot; class=&quot;headerlink&quot; title=&quot;Starting and stopping MediaRecorder&quot;&gt;&lt;/a&gt;Starting and stopping MediaRecorder&lt;/h2&gt;&lt;p&gt;MediaRecorder를 사용하여 video 녹화를 시작/중지할 때에는 반드시 아래의 순서를 따라야 한다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Camera.unlock()&lt;/li&gt;
&lt;li&gt;아래 예시 코드처럼 MediaRecorder를 설정한다.&lt;/li&gt;
&lt;li&gt;MediaRecorder.start() 로 녹화 시작&lt;/li&gt;
&lt;li&gt;녹화&lt;/li&gt;
&lt;li&gt;MediaRecorder.stop() 으로 녹화 중지&lt;/li&gt;
&lt;li&gt;MediaRecorder.release()&lt;/li&gt;
&lt;li&gt;Camera.lock()&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isRecording = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add a listener to the Capture button&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Button captureButton = (Button) findViewById(id.button_capture);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;captureButton.setOnClickListener(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnClickListener() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isRecording) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// stop recording and release camera&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                mMediaRecorder.stop();  &lt;span class=&quot;comment&quot;&gt;// stop the recording&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                releaseMediaRecorder(); &lt;span class=&quot;comment&quot;&gt;// release the MediaRecorder object&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                mCamera.lock();         &lt;span class=&quot;comment&quot;&gt;// take camera access back from MediaRecorder&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// inform the user that recording has stopped&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                setCaptureButtonText(&lt;span class=&quot;string&quot;&gt;&quot;Capture&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                isRecording = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// initialize video camera&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (prepareVideoRecorder()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Camera is available and unlocked, MediaRecorder is prepared,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// now you can start recording&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    mMediaRecorder.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// inform the user that recording has started&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    setCaptureButtonText(&lt;span class=&quot;string&quot;&gt;&quot;Stop&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    isRecording = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// prepare didn&#39;t work, release the camera&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    releaseMediaRecorder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// inform user&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Releasing-the-camera&quot;&gt;&lt;a href=&quot;#Releasing-the-camera&quot; class=&quot;headerlink&quot; title=&quot;Releasing the camera&quot;&gt;&lt;/a&gt;Releasing the camera&lt;/h2&gt;&lt;p&gt;Camera는 shared resource이기 때문에 개체를 얻어와서 사용하고 사용이 끝나면 release해줘야 한다. Activity.onPause() 상태가 되어도 release해줘야 한다. Application에서 camera를 적절히 release해주지 않는다면 application이 종료될 때까지 다른 곳에서 접근할 수 없다.&lt;/p&gt;
&lt;p&gt;Camera 개체를 release하기 위해 Camera.release()를 사용하면 된다. 아래 예시를 보자.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CameraActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Camera mCamera;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SurfaceView mPreview;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MediaRecorder mMediaRecorder;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPause&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onPause();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        releaseMediaRecorder();       &lt;span class=&quot;comment&quot;&gt;// if you are using MediaRecorder, release it first&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        releaseCamera();              &lt;span class=&quot;comment&quot;&gt;// release the camera immediately on pause event&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;releaseMediaRecorder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMediaRecorder != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mMediaRecorder.reset();   &lt;span class=&quot;comment&quot;&gt;// clear recorder configuration&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mMediaRecorder.release(); &lt;span class=&quot;comment&quot;&gt;// release the recorder object&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mMediaRecorder = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mCamera.lock();           &lt;span class=&quot;comment&quot;&gt;// lock camera for later use&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;releaseCamera&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCamera != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mCamera.release();        &lt;span class=&quot;comment&quot;&gt;// release the camera for other applications&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mCamera = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Saving-Media-Files&quot;&gt;&lt;a href=&quot;#Saving-Media-Files&quot; class=&quot;headerlink&quot; title=&quot;Saving Media Files&quot;&gt;&lt;/a&gt;Saving Media Files&lt;/h1&gt;&lt;p&gt;사진, 비디오 등의 Media 파일들은 장치의 외부 저장소 (SD Card)에 저장되어야 한다. 그래야 사용자가 접근할 수 있고 System 공간을 보존할 수 있다. 아무 디렉토리에나 저장이 가능하긴 하지만 다음과 같은 두 개의 표준 저장소를 제공한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES)&lt;ul&gt;
&lt;li&gt;사진 및 비디오를 저장하기 위해 추천되는 저장소이다. 이 공간은 public이기 때문에 쉽게 검색, 읽기, 쓰기, 삭제를 할 수 있다. Application을 삭제하더라도 여기에 남아있는 자료는 삭제되지 않는다. 사용자가 원래 사용하던 파일들과의 간섭을 피하기 위해 하위 디렉토리를 생성해서 사용하자(아래 예시에 나와있다). 이 메소드는 Android 2.2 (API 8)부터 사용 가능하다. 이전 버전에서는 &lt;a href=&quot;https://developer.android.com/guide/topics/data/data-storage.html#SavingSharedFiles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Saving Shard Files&lt;/a&gt;를 확인하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Context.getExternalFilesDir(Environment.DIRECTORY_PICTURE)&lt;ul&gt;
&lt;li&gt;이 메소드는 해당 application에 속한 디렉토리를 반환한다. Application이 삭제될 때 여기에 있는 파일들이 같이 삭제된다. 이 파일들에대해 보안규칙이 적용되지 않기 떄문에 다름 application들도 이 파일들을 읽기/수정/삭제 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아래 예제는 Media 파일을 위한 File 또는 Uri 저장소를 어떻게 생성하고 Camera application이 Intent를 통해 사용하는 방법을 나타낸다.&lt;/p&gt;
&lt;p&gt;더 자세한 정보는 &lt;a href=&quot;https://developer.android.com/guide/topics/data/data-storage.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Storage&lt;/a&gt; 에서 확인할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; MEDIA_TYPE_IMAGE = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; MEDIA_TYPE_VIDEO = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** Create a file Uri for saving an image or video */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Uri &lt;span class=&quot;title&quot;&gt;getOutputMediaFileUri&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; type)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Uri.fromFile(getOutputMediaFile(type));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** Create a File for saving an image or video */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; File &lt;span class=&quot;title&quot;&gt;getOutputMediaFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; type)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// To be safe, you should check that the SDCard is mounted&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// using Environment.getExternalStorageState() before doing this.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    File mediaStorageDir = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(Environment.getExternalStoragePublicDirectory(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              Environment.DIRECTORY_PICTURES), &lt;span class=&quot;string&quot;&gt;&quot;MyCameraApp&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// This location works best if you want the created images to be shared&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// between applications and persist after your app has been uninstalled.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Create the storage directory if it does not exist&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (! mediaStorageDir.exists())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (! mediaStorageDir.mkdirs())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Log.d(&lt;span class=&quot;string&quot;&gt;&quot;MyCameraApp&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;failed to create directory&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Create a media file name&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String timeStamp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;string&quot;&gt;&quot;yyyyMMdd_HHmmss&quot;&lt;/span&gt;).format(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    File mediaFile;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type == MEDIA_TYPE_IMAGE)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mediaFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(mediaStorageDir.getPath() + File.separator +&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;IMG_&quot;&lt;/span&gt;+ timeStamp + &lt;span class=&quot;string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(type == MEDIA_TYPE_VIDEO) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mediaFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(mediaStorageDir.getPath() + File.separator +&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;VID_&quot;&lt;/span&gt;+ timeStamp + &lt;span class=&quot;string&quot;&gt;&quot;.mp4&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mediaFile;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/media/audio-capture.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/guide/topics/media/audio-capture.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/reference/android/media/MediaRecorder.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/reference/android/media/MediaRecorder.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/media/camera.html#capture-video&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.android.com/guide/topics/media/camera.html#capture-video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/27/2016-08-27-android-mediarecorder/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[JavaScript] Uh... Converter</title>
      <link>http://lazyrodi.github.io/2016/08/21/2016-08-21-works-uh-converter/</link>
      <guid>http://lazyrodi.github.io/2016/08/21/2016-08-21-works-uh-converter/</guid>
      <pubDate>Sun, 21 Aug 2016 11:20:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Document-Word-Parser&quot;&gt;&lt;a href=&quot;#Document-Word-Parser&quot; class=&quot;headerlink&quot; title=&quot;Document Word Parser&quot;&gt;&lt;/a&gt;Document Word Parser&lt;/h2&gt;&lt;
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;Document-Word-Parser&quot;&gt;&lt;a href=&quot;#Document-Word-Parser&quot; class=&quot;headerlink&quot; title=&quot;Document Word Parser&quot;&gt;&lt;/a&gt;Document Word Parser&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Use : &lt;a href=&quot;http://lazyrodi.github.io/misc/UhConverter.html&quot;&gt;http://lazyrodi.github.io/misc/UhConverter.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Repository : &lt;a href=&quot;https://github.com/lazyrodi/misc/tree/master/UhConverter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lazyrodi/misc/tree/master/UhConverter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Select Input Data Type.&lt;/li&gt;
&lt;li&gt;Input code. You can input single data or array.&lt;br&gt;i.e. array format is {1, 2, 3, 4, 5}. MUST input ‘{‘, ‘}’ and seperator ‘,’&lt;/li&gt;
&lt;li&gt;Run&lt;/li&gt;
&lt;li&gt;You can see converted results.&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Single&lt;/th&gt;
&lt;th&gt;Array&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Binary&lt;/td&gt;
&lt;td&gt;100011&lt;/td&gt;
&lt;td&gt;{100011, 100100, 111010}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Decimal&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;{35, 36, 58}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Octal&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;{43, 44, 72}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hexadecimal&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;{23, 24, 3a}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ASCII&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;&amp;#123;#, $, :}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/21/2016-08-21-works-uh-converter/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GIT Troubleshooting</title>
      <link>http://lazyrodi.github.io/2016/08/15/2016-08-15-troubleshooting-git/</link>
      <guid>http://lazyrodi.github.io/2016/08/15/2016-08-15-troubleshooting-git/</guid>
      <pubDate>Sun, 14 Aug 2016 15:10:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Gerrit-admin을-잃어버렸을-때&quot;&gt;&lt;a href=&quot;#Gerrit-admin을-잃어버렸을-때&quot; class=&quot;headerlink&quot; title=&quot;Gerrit admin을 잃어버렸을 때&quot;&gt;&lt;/a&gt;Gerrit admin을 잃어버렸을 때&lt;/
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;Gerrit-admin을-잃어버렸을-때&quot;&gt;&lt;a href=&quot;#Gerrit-admin을-잃어버렸을-때&quot; class=&quot;headerlink&quot; title=&quot;Gerrit admin을 잃어버렸을 때&quot;&gt;&lt;/a&gt;Gerrit admin을 잃어버렸을 때&lt;/h2&gt;&lt;p&gt;개인적으로 사용하는 gerrit에서만 사용하고 회사에서는 이런 방법으로 해서는 안될듯. 그런데 다른 방법을 모르겠음…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;gerrit/etc/gerrit.conf&lt;/code&gt; 파일을 다음과 같이 수정한다. 이 상태일 때는 아무나 로그인하여 권한을 변경할 수 있으니 매우 주의하고 작업시간을 최소화할 것.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[auth]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    type = development_become_any_account&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;이후 gerrit에 로그인하고 계정 정보쪽 (우측 상단)을 누르면 &lt;code&gt;Switch Account&lt;/code&gt;가 보이고, 이를 눌러 admin 계정 (1000000) 으로 로그인이 가능해진다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;그 다음에 Administrator group에 원하는 계정을 추가한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gerrit/etc/gerrit.conf&lt;/code&gt; 파일을 원복시킨다.&lt;/li&gt;
&lt;/ol&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/15/2016-08-15-troubleshooting-git/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Gerrit 사용</title>
      <link>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-use-gerrit/</link>
      <guid>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-use-gerrit/</guid>
      <pubDate>Sun, 14 Aug 2016 06:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Ins
      
      </description>
      
      <content:encoded>&lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-use-gitweb/&quot; title=&quot;Gitweb 사용&quot;&gt;Gitweb 사용&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/14/2016-08-14-etc-gerrit-installation/&quot; title=&quot;Gerrit 설치&quot;&gt;Gerrit 설치&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;프로젝트의-추가&quot;&gt;&lt;a href=&quot;#프로젝트의-추가&quot; class=&quot;headerlink&quot; title=&quot;프로젝트의 추가&quot;&gt;&lt;/a&gt;프로젝트의 추가&lt;/h2&gt;&lt;p&gt;프로젝트를 추가하는 방법에는 기본적으로 세 가지가 있다고 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/project-configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/project-configuration.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gerrit web page 상에서 &lt;code&gt;Projects &amp;gt; Create Project&lt;/code&gt;를 통해 생성하는 방법&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;REST endpoint를 통해 생성하는 방법&lt;/li&gt;
&lt;li&gt;SSH 명령어를 통해 생성하는 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;나는 web page를 통해 생성을 시도해본다.&lt;/p&gt;
&lt;h3 id=&quot;Gerrit-Web-page를-통해-프로젝트-생성&quot;&gt;&lt;a href=&quot;#Gerrit-Web-page를-통해-프로젝트-생성&quot; class=&quot;headerlink&quot; title=&quot;Gerrit Web page를 통해 프로젝트 생성&quot;&gt;&lt;/a&gt;Gerrit Web page를 통해 프로젝트 생성&lt;/h3&gt;&lt;p&gt;Projects &amp;gt; Create New Project 로 가서 Project Name에 &lt;code&gt;temp&lt;/code&gt;를 입력하고 생성해본다.&lt;/p&gt;
&lt;p&gt;이러면 원래 지정해두었던 &lt;code&gt;~/repository&lt;/code&gt; 디렉토리 안에 새로운 &lt;code&gt;temp.git&lt;/code&gt; 이라는 저장소가 생성된다.&lt;/p&gt;
&lt;h2 id=&quot;사용자-추가-Server-side&quot;&gt;&lt;a href=&quot;#사용자-추가-Server-side&quot; class=&quot;headerlink&quot; title=&quot;사용자 추가 (Server side)&quot;&gt;&lt;/a&gt;사용자 추가 (Server side)&lt;/h2&gt;&lt;p&gt;사용자의 추가는 &lt;code&gt;gerrit&lt;/code&gt; 사용자 계정에서 아래 명령을 통해 추가한다. 이전에 admin을 추가했었다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ htpasswd ~/opt/gerrit/etc/passwords user&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;해당 사용자로 처음 로그인을 시도하면 이름, 이메일 및 SSH public key를 넣으라고 나온다.&lt;/p&gt;
&lt;p&gt;이름과 이메일을 넣고, SSH public key는 다음과 같이 생성하여 넣으면 된다.&lt;/p&gt;
&lt;p&gt;만약, 이전에 smtp 설정을 하지 않았다면 새 사용자의 email 인증은 진행할 수 없다.&lt;/p&gt;
&lt;h3 id=&quot;SSH-public-key-생성-Client-side&quot;&gt;&lt;a href=&quot;#SSH-public-key-생성-Client-side&quot; class=&quot;headerlink&quot; title=&quot;SSH public key 생성 (Client side)&quot;&gt;&lt;/a&gt;SSH public key 생성 (Client side)&lt;/h3&gt;&lt;p&gt;아래와 같이 생성된 key의 내용을 복사하여 gerrit에 넣고 Add를 눌러 추가한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ mkdir .ssh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; .ssh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ssh-keygen       &lt;span class=&quot;comment&quot;&gt;# 전부 그냥 엔터&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ cat id_rsa.pub   &lt;span class=&quot;comment&quot;&gt;# 여기 나오는 내용이 SSH public key이다.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Project-clone-Client-side&quot;&gt;&lt;a href=&quot;#Project-clone-Client-side&quot; class=&quot;headerlink&quot; title=&quot;Project clone (Client side)&quot;&gt;&lt;/a&gt;Project clone (Client side)&lt;/h2&gt;&lt;p&gt;새로 추가한 &lt;code&gt;user&lt;/code&gt; 계정에서 gerrit 접속 후 &lt;code&gt;projects &amp;gt; List &amp;gt; temp&lt;/code&gt;로 가면 현재 프로젝트를 clone할 수 있는 주소를 알 수 있다.&lt;/p&gt;
&lt;p&gt;http와 ssh로 나뉘어 제공되며, 나는 ssh로 clone 해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;push-1차-실패&quot;&gt;&lt;a href=&quot;#push-1차-실패&quot; class=&quot;headerlink&quot; title=&quot;push 1차 실패&quot;&gt;&lt;/a&gt;push 1차 실패&lt;/h3&gt;&lt;p&gt;파일 생성 후 push를 시도해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ touch b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git add -A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;[temp] touch b&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git push&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 4, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Delta compression using up to 2 threads.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Compressing objects: 100% (2/2), done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (2/2), 231 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 2 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Branch refs/heads/master:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: You are not allowed to perform this operation.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: To push into this reference you need &lt;span class=&quot;string&quot;&gt;&#39;Push&#39;&lt;/span&gt; rights.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: User: user&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Please &lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt; the documentation and contact an administrator&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; you feel the configuration is incorrect&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Processing changes: refs: 1, &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ! [remote rejected] master -&amp;gt; master (prohibited by Gerrit)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: 레퍼런스를 &lt;span class=&quot;string&quot;&gt;&#39;ssh://user@192.168.0.99:29418/temp&#39;&lt;/span&gt;에 푸시하는데 실패했습니다&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;직접 push할 수 있는 권한이 없다.&lt;/p&gt;
&lt;p&gt;검색을 해보면 이전에는 git review라는 명령어가 있었던 것 같은데 지금은 존재하지 않는다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ git remote -v&lt;/code&gt; 해서 temp 저장소에 대한 정보를 보면 master의 merge가 refs/heads/master로 되어있는 것을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/intro-user.html#upload-change&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;하지만 gerrit을 통해 code review를 받기 위해서는  refs/for/master 로 push를 해야한다고 한다.&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The refs/for/ prefix is used to map the Gerrit concept of “Pushing for Review” to the git protocol. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;시키는대로 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git push origin HEAD:refs/&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;/refs/heads/master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;push-2차-실패&quot;&gt;&lt;a href=&quot;#push-2차-실패&quot; class=&quot;headerlink&quot; title=&quot;push 2차 실패&quot;&gt;&lt;/a&gt;push 2차 실패&lt;/h3&gt;&lt;p&gt;또 실패했다. 다행인 것은 에러가 다르다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 4, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Delta compression using up to 2 threads.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Compressing objects: 100% (2/2), done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (2/2), 231 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 2 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Processing changes: refs: 1, &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: ERROR: missing Change-Id &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; commit message footer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Hint: To automatically insert Change-Id, install the hook:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:   gitdir=$(git rev-parse --git-dir); scp -p -P 29418 user@192.168.0.99:hooks/commit-msg &lt;span class=&quot;variable&quot;&gt;$&amp;#123;gitdir&amp;#125;&lt;/span&gt;/hooks/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: And &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; amend the commit:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:   git commit --amend&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ! [remote rejected] HEAD -&amp;gt; refs/&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;/refs/heads/master (missing Change-Id &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; commit message footer)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: 레퍼런스를 &lt;span class=&quot;string&quot;&gt;&#39;ssh://user@192.168.0.99:29418/temp&#39;&lt;/span&gt;에 푸시하는데 실패했습니다&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Change-Id가 없단다. 추적을 위해 반드시 필요한 부분이니 또 시키는대로 해본다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ scp -p -P 29418 user@192.168.0.99:hooks/commit-msg .git/hooks/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git commit --amend &lt;span class=&quot;comment&quot;&gt;#그냥 저장만 하고 나오자.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt;를 쳐보면 Change-Id가 생성된 것을 확인할 수 있다. 기쁜 마음으로 &lt;code&gt;git push origin HEAD:refs/for/refs/heads/master&lt;/code&gt; 해보자.&lt;/p&gt;
&lt;p&gt;드디어 성공했다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 4, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Delta compression using up to 2 threads.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Compressing objects: 100% (2/2), done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (2/2), 278 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 2 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: Processing changes: new: 1, refs: 1, &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote: New Changes:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:   http://192.168.0.99:80/1 [temp] touch b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To ssh://user@192.168.0.99:29418/temp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * [new branch]      HEAD -&amp;gt; refs/&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;/refs/heads/master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Gerrit에서-확인하기&quot;&gt;&lt;a href=&quot;#Gerrit에서-확인하기&quot; class=&quot;headerlink&quot; title=&quot;Gerrit에서 확인하기&quot;&gt;&lt;/a&gt;Gerrit에서 확인하기&lt;/h2&gt;&lt;p&gt;브라우저로 가서 gerrit에 들어가본다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;My &amp;gt; Changes&lt;/code&gt; 로 가면 방금 push한 commit을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;administrator 또는 reviewer group에 속한 사람의 계정으로 접속하면 코드를 확인 및 점수를 줄 수 있고 commit을 submit (merge)할 수 있다.&lt;/p&gt;
&lt;p&gt;자신의 commit에 변경사항이 발생하면 email로도 알려준다. 좋은 세상이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-15-etc-use-gerrit-001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mytory.net/archives/12632&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mytory.net/archives/12632&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-use-gerrit/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MySQL Troubleshooting</title>
      <link>http://lazyrodi.github.io/2016/08/14/2016-08-14-troubleshooting-mysql/</link>
      <guid>http://lazyrodi.github.io/2016/08/14/2016-08-14-troubleshooting-mysql/</guid>
      <pubDate>Sun, 14 Aug 2016 01:10:50 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;ERROR-1045-28000-Access-Denied-for-user-‘root’-’localhost’-using-password-NO&quot;&gt;&lt;a href=&quot;#ERROR-1045-28000-Access-Denied-for-user-‘roo
      
      </description>
      
      <content:encoded>&lt;h3 id=&quot;ERROR-1045-28000-Access-Denied-for-user-‘root’-’localhost’-using-password-NO&quot;&gt;&lt;a href=&quot;#ERROR-1045-28000-Access-Denied-for-user-‘root’-’localhost’-using-password-NO&quot; class=&quot;headerlink&quot; title=&quot;ERROR 1045 (28000): Access Denied for user ‘root’@’localhost’ (using password: NO)&quot;&gt;&lt;/a&gt;ERROR 1045 (28000): Access Denied for user ‘root’@’localhost’ (using password: NO)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sudo mysql -p&lt;/code&gt; 명령으로 비밀번호를 따로 입력하면 OK.&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/14/2016-08-14-troubleshooting-mysql/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Gerrit 설치</title>
      <link>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-gerrit-installation/</link>
      <guid>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-gerrit-installation/</guid>
      <pubDate>Sun, 14 Aug 2016 01:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Ins
      
      </description>
      
      <content:encoded>&lt;p&gt;다른 포스트에서 이어집니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/08/13/2016-08-13-etc-use-gitweb/&quot; title=&quot;Gitweb 사용&quot;&gt;Gitweb 사용&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이전 포스트에서 삽질했던 GIT 저장소에 대한 내용을 gerrit에서 직접적으로 사용하진 않습니다.&lt;/p&gt;
&lt;h1 id=&quot;설치&quot;&gt;&lt;a href=&quot;#설치&quot; class=&quot;headerlink&quot; title=&quot;설치&quot;&gt;&lt;/a&gt;설치&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;설치 가이드: &lt;a href=&quot;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/install.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-documentation.storage.googleapis.com/Documentation/2.12.3/install.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;유틸-설치&quot;&gt;&lt;a href=&quot;#유틸-설치&quot; class=&quot;headerlink&quot; title=&quot;유틸 설치&quot;&gt;&lt;/a&gt;유틸 설치&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;JDK7 이상&lt;/li&gt;
&lt;li&gt;Apache2&lt;/li&gt;
&lt;li&gt;Database&lt;ul&gt;
&lt;li&gt;&lt;code&gt;H2&lt;/code&gt;, &lt;code&gt;Apache Derby&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;Oracle&lt;/code&gt;, &lt;code&gt;SAP MaxDB&lt;/code&gt;, &lt;code&gt;DB2&lt;/code&gt; 중 하나를 사용하면 된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H2&lt;/code&gt;를 사용하면 gerrit의 기본 database라서 따로 설정할 것이 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install oracle-java7-installer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install apache2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install libapache2-mod-proxy-html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install apache2-utils&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo a2enmod proxy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo a2enmod proxy_http&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo service apache2 restart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;gerrit-설치&quot;&gt;&lt;a href=&quot;#gerrit-설치&quot; class=&quot;headerlink&quot; title=&quot;gerrit 설치&quot;&gt;&lt;/a&gt;gerrit 설치&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gerrit-releases.storage.googleapis.com/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-releases.storage.googleapis.com/index.html&lt;/a&gt; 의 Release Notes를 통해 war 경로를 확인할 수 있다. 16년 8월 현재 최신버전은 2.12.3.&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gerrit-releases.storage.googleapis.com/gerrit-2.12.3.war&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gerrit-releases.storage.googleapis.com/gerrit-2.12.3.war&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선, gerrit을 위해 ‘gerrit’ 이라는 user를 하나 생성하였다.&lt;/p&gt;
&lt;p&gt;설치 파일을 아래의 &lt;code&gt;wget&lt;/code&gt; 명령어로 download받을 수 있으며, &lt;code&gt;~/Downloads&lt;/code&gt; 디렉토리를 생성하여 그곳에 받았다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ wget https://gerrit-releases.storage.googleapis.com/gerrit-2.12.3.war&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;설치한다. &lt;code&gt;init -d&lt;/code&gt; 이후의 경로는 설치하고 싶은 경로를 지정한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ java -jar gerrit-2.12.3.war init &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/opt/gerrit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;나의 경우 설치 과정은 다음과 같다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;gerrit@computer:~/Downloads$ java -jar gerrit-2.12.3.war init &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/opt/gerrit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Using secure store: com.google.gerrit.server.securestore.DefaultSecureStore&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[2016-08-14 17:19:33,592] [main] INFO  com.google.gerrit.server.config.GerritServerConfigProvider : No /home/gerrit/opt/gerrit/etc/gerrit.config; assuming defaults&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Gerrit Code Review 2.12.3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Create &lt;span class=&quot;string&quot;&gt;&#39;/home/gerrit/opt/gerrit&#39;&lt;/span&gt; [Y/n]? Y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Git Repositories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Location of Git repositories   [git]: /home/gerrit/repository/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** SQL Database&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Database server &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;           [h2]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Index&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Type                           [LUCENE/?]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;The index must be rebuilt before starting Gerrit:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  java -jar gerrit.war reindex &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; site_path&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** User Authentication&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Authentication method          [OPENID/?]: http&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Get username from custom HTTP header [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Username HTTP header           [SM_USER]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SSO &lt;span class=&quot;built_in&quot;&gt;logout&lt;/span&gt; URL                 : http://aa:aa@192.168.0.99:80/login/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Enable signed push support     [y/N]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Review Labels&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install Verified label         [y/N]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Email Delivery&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP server hostname           [localhost]: smtp.gmail.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP server port               [(default)]: 465&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP encryption                [NONE/?]: SSL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SMTP username                  [gerrit]: 계정@gmail.com&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;계정@gmail.com&lt;span class=&quot;string&quot;&gt;&#39;s password  :&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              confirm password :&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Container Process&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Run as                         [gerrit]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Java runtime                   [/usr/lib/jvm/java-7-oracle/jre]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Copy gerrit-2.12.3.war to /home/gerrit/opt/gerrit/bin/gerrit.war [Y/n]? Y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Copying gerrit-2.12.3.war to /home/gerrit/opt/gerrit/bin/gerrit.war&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** SSH Daemon&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on address              [*]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on port                 [29418]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Gerrit Code Review is not shipped with Bouncy Castle Crypto SSL v152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  If available, Gerrit can take advantage of features&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  in the library, but will also function without it.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Download and install it now [Y/n]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Downloading http://repo2.maven.org/maven2/org/bouncycastle/bcpkix-jdk15on/1.52/bcpkix-jdk15on-1.52.jar ... OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Checksum bcpkix-jdk15on-1.52.jar OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Gerrit Code Review is not shipped with Bouncy Castle Crypto Provider v152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** This library is required by Bouncy Castle Crypto SSL v152. **&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Download and install it now [Y/n]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Downloading http://repo2.maven.org/maven2/org/bouncycastle/bcprov-jdk15on/1.52/bcprov-jdk15on-1.52.jar ... OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Checksum bcprov-jdk15on-1.52.jar OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Generating SSH host key ... rsa... dsa... done&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** HTTP Daemon&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Behind reverse proxy           [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Proxy uses SSL (https://)      [y/N]?&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Subdirectory on proxy server   [/]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on address              [*]: 192.168.0.99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Listen on port                 [8081]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Canonical URL                  [http://127.0.0.1/]: http://192.168.0.99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** Plugins&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Installing plugins.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin commit-message-length-validator version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin download-commands version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin replication version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin reviewnotes version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Install plugin singleusergroup version v2.12.3 [y/N]? y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Initializing plugins.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;No plugins found with init steps.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Initialized /home/gerrit/opt/gerrit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;위의 설정사항은 &lt;code&gt;설치디렉토리/etc/gerrit.config&lt;/code&gt; 에 저장된다.&lt;/p&gt;
&lt;h3 id=&quot;Index-rebuilt&quot;&gt;&lt;a href=&quot;#Index-rebuilt&quot; class=&quot;headerlink&quot; title=&quot;Index rebuilt&quot;&gt;&lt;/a&gt;Index rebuilt&lt;/h3&gt;&lt;p&gt;잘은 모르겠지만 검색 엔진에 대한 색인 과정인 것 같다. 이 명령어를 수행해줘야 하는 것 같다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ java -jar gerrit-2.12.3.war reindex &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; ~/opt/gerrit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Gerrit-실행&quot;&gt;&lt;a href=&quot;#Gerrit-실행&quot; class=&quot;headerlink&quot; title=&quot;Gerrit 실행&quot;&gt;&lt;/a&gt;Gerrit 실행&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/opt/gerrit/bin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ./gerrit.sh start&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;실행은 됐는데 브라우저로 확인할 수가 없다.&lt;/p&gt;
&lt;p&gt;apache 설정을 할 차례가 됐다.&lt;/p&gt;
&lt;h2 id=&quot;apache-proxy-설정&quot;&gt;&lt;a href=&quot;#apache-proxy-설정&quot; class=&quot;headerlink&quot; title=&quot;apache proxy 설정&quot;&gt;&lt;/a&gt;apache proxy 설정&lt;/h2&gt;&lt;h3 id=&quot;VirtualHost-파일-생성&quot;&gt;&lt;a href=&quot;#VirtualHost-파일-생성&quot; class=&quot;headerlink&quot; title=&quot;VirtualHost 파일 생성&quot;&gt;&lt;/a&gt;VirtualHost 파일 생성&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo vim /etc/apache2/sites-available/gerrit.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;VirtualHost *:80&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ServerName localhost&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyRequests Off&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyVia Off&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyPreserveHost On&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;Proxy *&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Order deny,allow&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Allow from all&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/Proxy&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;Location /login/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        AuthType Basic&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        AuthName &lt;span class=&quot;string&quot;&gt;&quot;Gerrit Code Review&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Require valid-user&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        AuthUserFile /home/gerrit/opt/gerrit/etc/passwords&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/Location&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyPass / http://192.168.0.99:8081/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ProxyPassReverese / http://192.168.0.99:8081/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Site-enabled-설정&quot;&gt;&lt;a href=&quot;#Site-enabled-설정&quot; class=&quot;headerlink&quot; title=&quot;Site-enabled 설정&quot;&gt;&lt;/a&gt;Site-enabled 설정&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /etc/apache2/sites-enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo ln &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt; ../sites-available/gerrit.conf ./001-gerrit.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ sudo a2ensite 001-gerrit.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;기본-설정파일의-포트를-변경&quot;&gt;&lt;a href=&quot;#기본-설정파일의-포트를-변경&quot; class=&quot;headerlink&quot; title=&quot;기본 설정파일의 포트를 변경&quot;&gt;&lt;/a&gt;기본 설정파일의 포트를 변경&lt;/h3&gt;&lt;p&gt;포트 충돌로 인해 gerrit이 로딩이 안될 수 있으므로, &lt;code&gt;sudo vim /etc/apache2/sites-available/000-default.conf&lt;/code&gt; 파일의 포트를 80에서 10080 등으로 변경한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;VirtualHost *:10080&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Gerrit-사용자-등록&quot;&gt;&lt;a href=&quot;#Gerrit-사용자-등록&quot; class=&quot;headerlink&quot; title=&quot;Gerrit 사용자 등록&quot;&gt;&lt;/a&gt;Gerrit 사용자 등록&lt;/h3&gt;&lt;p&gt;관리자 계정을 생성한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;htpasswd&lt;/code&gt;로 생성하는 계정은 apache에서 인증을 위해 사용하는 계정이며, gerrit은 처음 생성된 계정(uid 1000000)을 administrator로 인식한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ htpasswd -c /home/gerrit/opt/gerrit/etc/passwords &lt;span class=&quot;string&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;passwords파일을 처음 생성할 때에만 -c 옵션을 사용하며 이후 다른 계정을 추가할 때에는 그냥 아래와 같이 추가한다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ htpasswd /home/gerrit/opt/gerrit/etc/passwords &lt;span class=&quot;string&quot;&gt;&quot;usera&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Apache-재시작-및-gerrit-재시작&quot;&gt;&lt;a href=&quot;#Apache-재시작-및-gerrit-재시작&quot; class=&quot;headerlink&quot; title=&quot;Apache 재시작 및 gerrit 재시작&quot;&gt;&lt;/a&gt;Apache 재시작 및 gerrit 재시작&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo service apache2 restart&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/opt/gerrit/bin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ./gerrit.sh restart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;이후 접속을 시도하면, 사용자 이름 및 비밀번호를 묻는다.&lt;/p&gt;
&lt;p&gt;위에서 설정한 admin / password 를 넣는다.&lt;/p&gt;
&lt;p&gt;로그인 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-14-etc-gerrit-installation-001.jpg&quot; alt=&quot;Login 성공&quot;&gt;&lt;/p&gt;
&lt;p&gt;그런데 브라우저에따라 sign out이 안 되는 문제가 있다.&lt;/p&gt;
&lt;p&gt;이 문제의 해결을 위해서는 설치 시 logout URL을 &lt;code&gt;http://aa:aa@192.168.0.99:80/login/&lt;/code&gt; 처럼 넣어주면 된다. aa:aa 는 문자 그대로 aa:aa 그대로 넣어주면 된다.&lt;/p&gt;
&lt;p&gt;이게 조금 이상한 버그인게… 사람마다 아래 중 하나로 해야 해결되는 케이스가 있다고 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://aa:aa@192.168.0.99&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://aa:aa@192.168.0.99&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aa:aa@192.168.0.99:80&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://aa:aa@192.168.0.99:80&lt;/a&gt;         # 포트까지&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://aa:aa@192.168.0.99:80/login/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://aa:aa@192.168.0.99:80/login/&lt;/a&gt;  # 뒤의 경로까지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;logout URL을 처음에 설정을 못 하였다면 &lt;code&gt;/etc/gerrit.config&lt;/code&gt; 파일을 열고 &lt;code&gt;[auth]&lt;/code&gt; 아래에 다음과 같이 추가하면 된다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[auth]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SSO &lt;span class=&quot;built_in&quot;&gt;logout&lt;/span&gt; URL                 : http://aa:aa@192.168.0.99:80/login/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;sign out이 안되는 문제의 기본적인 원인은 HTTP의 특성 (&lt;a href=&quot;https://groups.google.com/forum/?fromgroups=#!topic/repo-discuss/7P73ZvK4OQQ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://groups.google.com/forum/?fromgroups=#!topic/repo-discuss/7P73ZvK4OQQ&lt;/a&gt; 참조)이라고 한다. auth type을 다른 것들(oAuth, OpenID, etc.)로 지정하면 이런 문제는 발생하지 않는 듯 하다.&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gerritcodereview.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.gerritcodereview.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pseg.or.kr/pseg/infoinstall/1780&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pseg.or.kr/pseg/infoinstall/1780&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ahnseungkyu.com/194&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ahnseungkyu.com/194&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/14/2016-08-14-etc-gerrit-installation/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Gitweb 사용</title>
      <link>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-use-gitweb/</link>
      <guid>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-use-gitweb/</guid>
      <pubDate>Sat, 13 Aug 2016 14:02:50 GMT</pubDate>
      <description>
      
        &lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;에서 설치한 내용을 GitWeb 을
      
      </description>
      
      <content:encoded>&lt;a href=&quot;/2016/08/13/2016-08-13-etc-git-server-installation/&quot; title=&quot;GIT Server Installation&quot;&gt;GIT Server Installation&lt;/a&gt;에서 설치한 내용을 GitWeb 을 통해 보는 방법이다.&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;GitWeb은 말 그대로 GIT의 변경사항을 Web에서 편하게 볼 수 있게 도와주는 툴이다. 예시로는 &lt;a href=&quot;https://android.googlesource.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://android.googlesource.com/&lt;/a&gt; 를 보는 것이 적절할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GIT에서 기본적으로 지원해주는 내용이라 한 번에 써둘까 했는데, 그냥 포스트를 하나 더 작성하였다.&lt;/p&gt;
&lt;p&gt;아래 명령을 수행하면 GitWeb이 실행되어 브라우저에서 확인할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo git instaweb&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Gitweb은 &lt;code&gt;lighttpd&lt;/code&gt;에 의존성이 있어서 내 PC에서는 에러가 발생하였다.&lt;/p&gt;
&lt;p&gt;설치한다. 리눅스 버전에 따라 기본적으로 설치되어 있는 것도 있다고 한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install lighttpd&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;이후 다시 &lt;code&gt;sudo git instaweb&lt;/code&gt;을 수행한 후 브라우저에서 &lt;code&gt;127.0.0.1:1234&lt;/code&gt; 를 입력하면 Gitweb을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;GitWeb의 &lt;code&gt;Description&lt;/code&gt; 설정은 GIT 저장소의 &lt;code&gt;description&lt;/code&gt;파일을 수정하면 바뀐다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-13-etc-use-gitweb-001.jpg&quot; alt=&quot;Project-A의 GitWeb&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ko/v2/Git-%EC%84%9C%EB%B2%84-GitWeb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git-scm.com/book/ko/v2/Git-%EC%84%9C%EB%B2%84-GitWeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-use-gitweb/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GIT server installation</title>
      <link>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-git-server-installation/</link>
      <guid>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-git-server-installation/</guid>
      <pubDate>Sat, 13 Aug 2016 03:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;Ubuntu에서 GIT server를 구축해 보았다.&lt;/p&gt;
&lt;h1 id=&quot;Server-side&quot;&gt;&lt;a href=&quot;#Server-side&quot; class=&quot;headerlink&quot; title=&quot;Server side&quot;&gt;&lt;/a&gt;Server side&lt;/h1&gt;
      
      </description>
      
      <content:encoded>&lt;p&gt;Ubuntu에서 GIT server를 구축해 보았다.&lt;/p&gt;
&lt;h1 id=&quot;Server-side&quot;&gt;&lt;a href=&quot;#Server-side&quot; class=&quot;headerlink&quot; title=&quot;Server side&quot;&gt;&lt;/a&gt;Server side&lt;/h1&gt;&lt;h2 id=&quot;새-Project를-위한-계정-생성&quot;&gt;&lt;a href=&quot;#새-Project를-위한-계정-생성&quot; class=&quot;headerlink&quot; title=&quot;새 Project를 위한 계정 생성&quot;&gt;&lt;/a&gt;새 Project를 위한 계정 생성&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo adduser project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;git-설치&quot;&gt;&lt;a href=&quot;#git-설치&quot; class=&quot;headerlink&quot; title=&quot;git 설치&quot;&gt;&lt;/a&gt;git 설치&lt;/h2&gt;&lt;p&gt;위에서 생성한 &lt;code&gt;project-a&lt;/code&gt; 계정으로 로그인한 후,&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;git-저장소-생성&quot;&gt;&lt;a href=&quot;#git-저장소-생성&quot; class=&quot;headerlink&quot; title=&quot;.git 저장소 생성&quot;&gt;&lt;/a&gt;.git 저장소 생성&lt;/h2&gt;&lt;p&gt;임의의 디렉토리 &lt;code&gt;~/project-a.git&lt;/code&gt;를 생성한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ mkdir project-a.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; project-a.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git init --bare --shared&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;--bare&lt;/code&gt;: 빈 저장소(bare repository)를 생성한다. config 파일의 &lt;code&gt;bare&lt;/code&gt; 속성이 &lt;code&gt;true&lt;/code&gt;로 변경된다. bare 설정이 되어있어야 제대로 사용이 가능하다. &lt;code&gt;GIT_DIR&lt;/code&gt; 환경설정이 따로 되어있는 경우가 아니라면 현재의 디렉토리를 빈 저장소로 설정한다.&lt;br&gt;&lt;code&gt;--shared&lt;/code&gt;: GIT 저장소의 push 권한을 설정한다. 이 옵션을 사용할 경우 &lt;code&gt;core.sharedRepository&lt;/code&gt; 속성이 &lt;code&gt;1&lt;/code&gt;로 설정된다. 이 옵션의 하위 속성으로는 &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;umask&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;world&lt;/code&gt;, &lt;code&gt;everybody&lt;/code&gt;, &lt;code&gt;0xxx&lt;/code&gt;가 있다.&lt;/p&gt;
&lt;p&gt;놀랍게도(?) GIT server의 생성이 끝났다.&lt;/p&gt;
&lt;h1 id=&quot;Client-side&quot;&gt;&lt;a href=&quot;#Client-side&quot; class=&quot;headerlink&quot; title=&quot;Client side&quot;&gt;&lt;/a&gt;Client side&lt;/h1&gt;&lt;h2 id=&quot;서버로부터-git-clone하기&quot;&gt;&lt;a href=&quot;#서버로부터-git-clone하기&quot; class=&quot;headerlink&quot; title=&quot;서버로부터 git clone하기&quot;&gt;&lt;/a&gt;서버로부터 git clone하기&lt;/h2&gt;&lt;p&gt;위에서 생성한 저장소를 사용할 user의 아이디가 &lt;code&gt;User2&lt;/code&gt; 라고 하자.&lt;/p&gt;
&lt;p&gt;여기서는 같은 서버에 붙어있는 사용자이므로 주소를 &lt;code&gt;127.0.0.1&lt;/code&gt; 로 사용한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; User2@127.0.0.1:/home/project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;/project-a.git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;환경설정&quot;&gt;&lt;a href=&quot;#환경설정&quot; class=&quot;headerlink&quot; title=&quot;환경설정&quot;&gt;&lt;/a&gt;환경설정&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;User2@gmail.com&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;User2&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git config push.default simple&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;push.default&lt;/code&gt;: &lt;code&gt;simple&lt;/code&gt;과 &lt;code&gt;matching&lt;/code&gt; 두 가지 값을 사용할 수 있으며, 각각의 의미는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;simple&lt;/code&gt;: 현재 작업 중인 branch에만 push&lt;/li&gt;
&lt;li&gt;&lt;code&gt;matching&lt;/code&gt;: 모든 branch에 대해 push&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;설정값들은 &lt;code&gt;git config --global --list&lt;/code&gt;를 통해 확인할 수 있으며, 기본 설정을 건드리지 않았다면 &lt;code&gt;/home/계정/.gitconfig&lt;/code&gt;에 내용이 저장되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;push.default&lt;/code&gt;를 설정하지 않아도 크게 상관은 없지만, &lt;code&gt;git push&lt;/code&gt; 시 다음과 같은 경고가 발생하기 때문에 미리 설정하는 것이 좋다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;warning: push.default is &lt;span class=&quot;built_in&quot;&gt;unset&lt;/span&gt;; its implicit value is changing &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Git 2.0 from &lt;span class=&quot;string&quot;&gt;&#39;matching&#39;&lt;/span&gt; to &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt;. To squelch this message&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;and maintain the current behavior after the default changes, use:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  git config --global push.default matching&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To squelch this message and adopt the new behavior now, use:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  git config --global push.default simple&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;When push.default is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; to &lt;span class=&quot;string&quot;&gt;&#39;matching&#39;&lt;/span&gt;, git will push &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; branches&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;to the remote branches that already exist with the same name.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;In Git 2.0, Git will default to the more conservative &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;behavior, &lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; only pushes the current branch to the corresponding&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;remote branch that &lt;span class=&quot;string&quot;&gt;&#39;git pull&#39;&lt;/span&gt; uses to update the current branch.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;See &lt;span class=&quot;string&quot;&gt;&#39;git help config&#39;&lt;/span&gt; and search &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;push.default&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; further information.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(the &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt; mode was introduced &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Git 1.7.11. Use the similar mode&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;current&#39;&lt;/span&gt; instead of &lt;span class=&quot;string&quot;&gt;&#39;simple&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; you sometimes use older versions of Git)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;파일-만들어서-push-하기&quot;&gt;&lt;a href=&quot;#파일-만들어서-push-하기&quot; class=&quot;headerlink&quot; title=&quot;파일 만들어서 push 하기&quot;&gt;&lt;/a&gt;파일 만들어서 push 하기&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ touch a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git add .&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;[temp] make file &#39;a&#39;.&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git push&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;하면, 에러가 난다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fatal: The remote end hung up unexpectedly&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error: 레퍼런스를 &lt;span class=&quot;string&quot;&gt;&#39;User2@127.0.0.1:/home/project-a/project-a.git&#39;&lt;/span&gt;에 푸시하는데 실패했습니다&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;GIT 저장소인 /home/project-a/project-a.git에 &lt;code&gt;User2&lt;/code&gt; 사용자의 write 권한이 없어서 문제가 발생한 것이다.&lt;/p&gt;
&lt;h1 id=&quot;다시-Server-side&quot;&gt;&lt;a href=&quot;#다시-Server-side&quot; class=&quot;headerlink&quot; title=&quot;다시 Server side&quot;&gt;&lt;/a&gt;다시 Server side&lt;/h1&gt;&lt;h2 id=&quot;group-추가-및-permission-부여&quot;&gt;&lt;a href=&quot;#group-추가-및-permission-부여&quot; class=&quot;headerlink&quot; title=&quot;group 추가 및 permission 부여&quot;&gt;&lt;/a&gt;group 추가 및 permission 부여&lt;/h2&gt;&lt;p&gt;해당 프로젝트 사용자들을 위해 &lt;code&gt;project-a&lt;/code&gt;그룹에 사용자를 추가하자.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo usermod &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; -G project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; User2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;그리고-다시-Client-side&quot;&gt;&lt;a href=&quot;#그리고-다시-Client-side&quot; class=&quot;headerlink&quot; title=&quot;그리고 다시 Client side&quot;&gt;&lt;/a&gt;그리고 다시 Client side&lt;/h1&gt;&lt;p&gt;다시 &lt;code&gt;git push&lt;/code&gt;를 시도한다. 그리고 성공한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Counting objects: 3, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Writing objects: 100% (3/3), 219 bytes | 0 bytes/s, done.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Total 3 (delta 0), reused 0 (delta 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To User2@127.0.0.1:/home/project&lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;/project-a.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * [new branch]      master -&amp;gt; master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ko/v2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git-scm.com/book/ko/v2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/13/2016-08-13-etc-git-server-installation/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Big-O Complexity</title>
      <link>http://lazyrodi.github.io/2016/08/09/2016-08-09-common-bigo/</link>
      <guid>http://lazyrodi.github.io/2016/08/09/2016-08-09-common-bigo/</guid>
      <pubDate>Tue, 09 Aug 2016 11:02:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Big-O-분석법-Big-O-analysis&quot;&gt;&lt;a href=&quot;#Big-O-분석법-Big-O-analysis&quot; class=&quot;headerlink&quot; title=&quot;Big-O 분석법 (Big-O analysis)&quot;&gt;&lt;/a&gt;Big-O 분석법 (B
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;Big-O-분석법-Big-O-analysis&quot;&gt;&lt;a href=&quot;#Big-O-분석법-Big-O-analysis&quot; class=&quot;headerlink&quot; title=&quot;Big-O 분석법 (Big-O analysis)&quot;&gt;&lt;/a&gt;Big-O 분석법 (Big-O analysis)&lt;/h2&gt;&lt;p&gt;입력 값의 개수에 따라 알고리즘이 수행되는데 걸리는 시간을 바탕으로 알고리즘의 효율성을 평가하는 실행 시간 분석법.&lt;/p&gt;
&lt;h2 id=&quot;Big-O-분석의-적용&quot;&gt;&lt;a href=&quot;#Big-O-분석의-적용&quot; class=&quot;headerlink&quot; title=&quot;Big-O 분석의 적용&quot;&gt;&lt;/a&gt;Big-O 분석의 적용&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;입력 값이 무엇인지 확인하고 어떤 것을 n으로 놓아야 할지 결정한다.&lt;/li&gt;
&lt;li&gt;알고리즘에서 수행해야 할 연산 횟수를 n의 식으로 표현한다.&lt;/li&gt;
&lt;li&gt;차수가 제일 높은 항만 남긴다.&lt;/li&gt;
&lt;li&gt;모든 상수 인수를 없앤다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Big-O-알고리즘의-종류&quot;&gt;&lt;a href=&quot;#Big-O-알고리즘의-종류&quot; class=&quot;headerlink&quot; title=&quot;Big-O 알고리즘의 종류&quot;&gt;&lt;/a&gt;Big-O 알고리즘의 종류&lt;/h2&gt;&lt;h4 id=&quot;O-1&quot;&gt;&lt;a href=&quot;#O-1&quot; class=&quot;headerlink&quot; title=&quot;O(1)&quot;&gt;&lt;/a&gt;O(1)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;상수 실행 시간(constant running time)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;가장 빠른 알고리즘이며 이 경우는 거의 없다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = n * n&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;O-log-n&quot;&gt;&lt;a href=&quot;#O-log-n&quot; class=&quot;headerlink&quot; title=&quot;O(log n)&quot;&gt;&lt;/a&gt;O(log n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;로그 알고리즘(logarithmic algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;실행 시간이 입력 크기의 log에 비례해서 늘어나는 알고리즘.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;logarithmatic&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; n &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        n //= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;O-n&quot;&gt;&lt;a href=&quot;#O-n&quot; class=&quot;headerlink&quot; title=&quot;O(n)&quot;&gt;&lt;/a&gt;O(n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;선형 알고리즘(linear algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;실행 시간이 입력크기에 비례하는 알고리즘.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;O(n)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n, A)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; A[i] == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;O(n + m)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result += i&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(m):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        result += j&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;O-n-log-n&quot;&gt;&lt;a href=&quot;#O-n-log-n&quot; class=&quot;headerlink&quot; title=&quot;O(n log n)&quot;&gt;&lt;/a&gt;O(n log n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;초선형 알고리즘(superlinear algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;속도가 선형 알고리즘과 다항식 알고리즘의 중간쯤이다.&lt;/p&gt;
&lt;h4 id=&quot;O-n-2&quot;&gt;&lt;a href=&quot;#O-n-2&quot; class=&quot;headerlink&quot; title=&quot;O(n^2)&quot;&gt;&lt;/a&gt;O(n^2)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;이차 알고리즘(quadratic algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;입력 크기의 제곱으로 시간이 늘어난다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;quadratic&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(i, n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            result += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;O-n-c&quot;&gt;&lt;a href=&quot;#O-n-c&quot; class=&quot;headerlink&quot; title=&quot;O(n^c)&quot;&gt;&lt;/a&gt;O(n^c)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;다항식 알고리즘(polynomial algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;입력 크기가 늘어나면 실행 시간이 빠르게 늘어난다.&lt;/p&gt;
&lt;h4 id=&quot;O-c-n&quot;&gt;&lt;a href=&quot;#O-c-n&quot; class=&quot;headerlink&quot; title=&quot;O(c^n)&quot;&gt;&lt;/a&gt;O(c^n)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;지수 알고리즘(exponential algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;다항식 알고리즘보다 실행 속도가 빠르게 늘어난다.&lt;/p&gt;
&lt;h4 id=&quot;O-n-1&quot;&gt;&lt;a href=&quot;#O-n-1&quot; class=&quot;headerlink&quot; title=&quot;O(n!)&quot;&gt;&lt;/a&gt;O(n!)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;팩토리얼 알고리즘(factorial algorithm)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;가장 느린 알고리즘으로 n의 값이 작다고 해도 사용이 힘든 수준으로 느려진다.&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;프로그래밍 면접 이렇게 준비한다 - 한빛미디어&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A0%90%EA%B7%BC_%ED%91%9C%EA%B8%B0%EB%B2%95&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ko.wikipedia.org/wiki/%EC%A0%90%EA%B7%BC_%ED%91%9C%EA%B8%B0%EB%B2%95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codility.com/programmers/lessons/1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/programmers/lessons/1/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Time_complexity&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://en.wikipedia.org/wiki/Time_complexity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/09/2016-08-09-common-bigo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux Troubleshooting</title>
      <link>http://lazyrodi.github.io/2016/08/09/2016-08-09-troubleshooting-linux/</link>
      <guid>http://lazyrodi.github.io/2016/08/09/2016-08-09-troubleshooting-linux/</guid>
      <pubDate>Tue, 09 Aug 2016 01:00:50 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;&lt;p&gt;아래 글들은 Ubuntu에 대한 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot;&gt;&lt;a href=&quot;#노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot; class=
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;&lt;p&gt;아래 글들은 Ubuntu에 대한 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot;&gt;&lt;a href=&quot;#노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot; class=&quot;headerlink&quot; title=&quot;노트북 절전모드 진입 시 네트워크가 끊어지는 문제&quot;&gt;&lt;/a&gt;노트북 절전모드 진입 시 네트워크가 끊어지는 문제&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;관리자 권한으로 /etc/systemd/logind.conf 파일에 &lt;code&gt;HandleLidSwitch=ignore&lt;/code&gt; 를 추가한다.&lt;/li&gt;
&lt;li&gt;Login daemon을 재 시작한다. &lt;code&gt;sudo restart systemd-logind&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;참조: &lt;a href=&quot;http://askubuntu.com/questions/360615/ubuntu-server-13-10-now-goes-to-sleep-when-closing-laptop-lid/361087#361087&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://askubuntu.com/questions/360615/ubuntu-server-13-10-now-goes-to-sleep-when-closing-laptop-lid/361087#361087&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;한글-깨짐-현상&quot;&gt;&lt;a href=&quot;#한글-깨짐-현상&quot; class=&quot;headerlink&quot; title=&quot;한글 깨짐 현상&quot;&gt;&lt;/a&gt;한글 깨짐 현상&lt;/h3&gt;&lt;p&gt;이 문제에 대한 해결책은 여기저기 다 다른 것 같지만…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Language pack install&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install language-pack-ko&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install language-pack-ko-base&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Home 디렉토리(&lt;code&gt;cd ~&lt;/code&gt;)의 &lt;code&gt;.bashrc&lt;/code&gt; 또는 &lt;code&gt;.bash_profile&lt;/code&gt;에 &lt;code&gt;export LANG=ko_KR.UTF-8&lt;/code&gt; 추가&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;시스템 재시작&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Putty-문제인-경우&quot;&gt;&lt;a href=&quot;#Putty-문제인-경우&quot; class=&quot;headerlink&quot; title=&quot;Putty 문제인 경우!!&quot;&gt;&lt;/a&gt;Putty 문제인 경우!!&lt;/h4&gt;&lt;p&gt;putty로 접속했을 때 깨지는 문제는 Ubuntu의 문제와 다를 수 있음.&lt;/p&gt;
&lt;p&gt;putty 실행 &amp;gt; Window &amp;gt; Translation &amp;gt; Remote character set에서 &lt;code&gt;UTF-8&lt;/code&gt;을 선택하면 문제 해결.&lt;/p&gt;
&lt;h3 id=&quot;sudo-권한-또는-root-비밀번호-분실-시&quot;&gt;&lt;a href=&quot;#sudo-권한-또는-root-비밀번호-분실-시&quot; class=&quot;headerlink&quot; title=&quot;sudo 권한 또는 root 비밀번호 분실 시&quot;&gt;&lt;/a&gt;sudo 권한 또는 root 비밀번호 분실 시&lt;/h3&gt;&lt;p&gt;그룹을 잘못 지정해서 sudo 권한을 상실해서 난감했었다. 아래와 같이 Recovery mode로 진입하여 해결할 수 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Recovery mode 진입&lt;ul&gt;
&lt;li&gt;부팅 시 좌측 Shift 키를 누르고 있으면 진입이 가능하다.&lt;/li&gt;
&lt;li&gt;한성 노트북에서는 이게 잘 되지 않아서 F2로 CMOS 진입하니 부팅 순서에 ubuntu가 두 개가 있어서 다른 것으로 진입하니 grub mode로 진입이 되었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(recovery mode)로 되어있는 것을 선택하여 진입하고, 선택 메뉴가 나오면 &lt;code&gt;root        Drop to root shell prompt&lt;/code&gt; 를 선택한다.&lt;/li&gt;
&lt;li&gt;파티션의 write 권한 부여를 위해 remount한다.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ mount -rw -o remount /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;만약 root 비밀번호를 잃어버린 거라면 &lt;code&gt;passwd&lt;/code&gt;를 입력하여 비밀번호를 변경한다.&lt;/li&gt;
&lt;li&gt;나의 경우는 sudo 권한을 가진 계정이 모두 없어져서 곤란한 상황이었기 때문에 &lt;code&gt;$ visudo&lt;/code&gt; 를 수행하여 다음과 같이 root 아래 sudo권한을 원하는 계정을 추가하고 저장 후 &lt;code&gt;reboot&lt;/code&gt; 하면 끝.&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# User privilege specification&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;root ALL=(ALL:ALL) ALL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;계정 ALL=(ALL:ALL) ALL&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/09/2016-08-09-troubleshooting-linux/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Ubuntu server installation</title>
      <link>http://lazyrodi.github.io/2016/08/09/2016-08-09-docthread-install-ubuntu/</link>
      <guid>http://lazyrodi.github.io/2016/08/09/2016-08-09-docthread-install-ubuntu/</guid>
      <pubDate>Mon, 08 Aug 2016 23:00:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;ssh 접속해서 딴 짓 하려고 서버를 설치할래다가 기존에 그냥 Desktop용을 사용하던 것이 있어서 거기에 &lt;code&gt;openssh-server&lt;/code&gt;를 설치하기로 했습니다.&lt;/p&gt;
&lt;p&gt;그 전의 과정까지는 그래도 스스로를 위해 남겨두려…
      
      </description>
      
      <content:encoded>&lt;p&gt;ssh 접속해서 딴 짓 하려고 서버를 설치할래다가 기존에 그냥 Desktop용을 사용하던 것이 있어서 거기에 &lt;code&gt;openssh-server&lt;/code&gt;를 설치하기로 했습니다.&lt;/p&gt;
&lt;p&gt;그 전의 과정까지는 그래도 스스로를 위해 남겨두려…&lt;/p&gt;
&lt;h1 id=&quot;Download&quot;&gt;&lt;a href=&quot;#Download&quot; class=&quot;headerlink&quot; title=&quot;Download&quot;&gt;&lt;/a&gt;Download&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.ubuntu.com/server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu 공식 사이트&lt;/a&gt;에서 Server 버전을 다운로드 받습니다.&lt;/p&gt;
&lt;p&gt;ISO 파일이 다운로드 됩니다.&lt;/p&gt;
&lt;h1 id=&quot;Installing&quot;&gt;&lt;a href=&quot;#Installing&quot; class=&quot;headerlink&quot; title=&quot;Installing&quot;&gt;&lt;/a&gt;Installing&lt;/h1&gt;&lt;p&gt;전체적인 과정은 &lt;a href=&quot;http://www.ubuntu.com/download/server/install-ubuntu-server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installing Ubuntu Server for general user&lt;/a&gt;페이지를 참조하세요.&lt;/p&gt;
&lt;h2 id=&quot;USB-만들기&quot;&gt;&lt;a href=&quot;#USB-만들기&quot; class=&quot;headerlink&quot; title=&quot;USB 만들기&quot;&gt;&lt;/a&gt;USB 만들기&lt;/h2&gt;&lt;h3 id=&quot;Rufus-다운로드&quot;&gt;&lt;a href=&quot;#Rufus-다운로드&quot; class=&quot;headerlink&quot; title=&quot;Rufus 다운로드&quot;&gt;&lt;/a&gt;Rufus 다운로드&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://rufus.akeo.ie/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://rufus.akeo.ie/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;부팅-가능한-USB-만들기&quot;&gt;&lt;a href=&quot;#부팅-가능한-USB-만들기&quot; class=&quot;headerlink&quot; title=&quot;부팅 가능한 USB 만들기&quot;&gt;&lt;/a&gt;부팅 가능한 USB 만들기&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to create a bootable USB stick on Windows&lt;/a&gt;에 잘 설명되어 있습니다.&lt;/p&gt;
&lt;h2 id=&quot;설치하기&quot;&gt;&lt;a href=&quot;#설치하기&quot; class=&quot;headerlink&quot; title=&quot;설치하기&quot;&gt;&lt;/a&gt;설치하기&lt;/h2&gt;&lt;p&gt;설치하려는 PC에 USB꼽고 부팅해서 쭉쭉 설치. 요새는 뭐 왠만한 것들은 알아서 다 해줘서 혼자 공부하기 위한 설치라면 쭉쭉 진행 가능합니다.&lt;/p&gt;
&lt;h3 id=&quot;리눅스-파티션&quot;&gt;&lt;a href=&quot;#리눅스-파티션&quot; class=&quot;headerlink&quot; title=&quot;리눅스 파티션&quot;&gt;&lt;/a&gt;리눅스 파티션&lt;/h3&gt;&lt;p&gt;리눅스와 유닉스 계열의 OS들은 Windows의 폴더 및 드라이브 개념이 없습니다.&lt;/p&gt;
&lt;p&gt;루트 디렉토리를 기준으로 파일 및 디렉토리들이 위치하며, &lt;code&gt;mount&lt;/code&gt; 명령을 통해 디렉토리와 HDD 등의 저장소를 연결하여 사용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;리눅스의 파티션은 각각 아래의 용도로 사용됩니다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;파티션&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;루트 디렉토리.&lt;br&gt;최상위 디렉토리이며 &lt;code&gt;cd /&lt;/code&gt; 명령어를 통해 접근할 수 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/bin&lt;/td&gt;
&lt;td&gt;명령어들이 들어있으며 여기에 있는 명령어들은 모든 사용자들이 사용 가능합니다.&lt;br&gt;필수적인 명령어들 및 시스템 부팅과 관련된 파일들이 모여있습니다.&lt;br&gt;커널 이미지인 &lt;code&gt;vmlinuz&lt;/code&gt;가 여기에 위치해 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev&lt;/td&gt;
&lt;td&gt;디바이스 파일들.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc&lt;/td&gt;
&lt;td&gt;여러가지의 시스템 설정 파일들.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;td&gt;일반 사용자의 home 디렉토리.&lt;br&gt;hong이라는 사용자의 home 디렉토리는 일반적으로 &lt;code&gt;/home/hong&lt;/code&gt;이 됩니다. 이 경로는 설정을 통해 변경 가능합니다.&lt;br&gt;&lt;code&gt;cd ~&lt;/code&gt;를 통해 접근할 수 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/lib&lt;/td&gt;
&lt;td&gt;공유 라이브러리&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/mnt&lt;/td&gt;
&lt;td&gt;다른 파티션을 mount 할 때 이곳으로 합니다.&lt;br&gt;일반적으로 cdrom 사용 시 &lt;code&gt;/mnt/cdrom&lt;/code&gt;에 mount시켜서 사용합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc&lt;/td&gt;
&lt;td&gt;프로세스 정보를 담고 있는 파일들.&lt;br&gt;프로세스 정보는 &lt;code&gt;ps&lt;/code&gt; 명령어로도 확인할 수 있습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/root&lt;/td&gt;
&lt;td&gt;Super user(root)의 home 디렉토리.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/sbin&lt;/td&gt;
&lt;td&gt;Super user가 시스템을 운영하는데 필수적인 실행 파일들.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/tmp&lt;/td&gt;
&lt;td&gt;Temporary 디렉토리. 임시 저장 파일들이 거쳐갑니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr&lt;/td&gt;
&lt;td&gt;사용자들을 위한 여러가지 프로그램 및 설정 파일들.&lt;br&gt;리눅스/유닉스 디렉토리 구조 중 가장 크고 복잡하며 루트(/)와 비슷한 구조를 가집니다.&lt;br&gt;&lt;code&gt;/usr/bin&lt;/code&gt;, &lt;code&gt;/usr/lib&lt;/code&gt;, &lt;code&gt;usr/sbin&lt;/code&gt; 등 루트(/)에 들어있는 것들이 여기에 비슷하게 다 들어있으며, 패키지 등을 설치할 때 일반적으로 이쪽으로 저장됩니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var&lt;/td&gt;
&lt;td&gt;로그 파일 및 시스템 관리와 관련된 파일들을 여기에 저장합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;Install-후-기본-설치하는-것들-개인-취향&quot;&gt;&lt;a href=&quot;#Install-후-기본-설치하는-것들-개인-취향&quot; class=&quot;headerlink&quot; title=&quot;Install 후 기본 설치하는 것들 (개인 취향)&quot;&gt;&lt;/a&gt;Install 후 기본 설치하는 것들 (개인 취향)&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get update           # 업데이트 저장소에서 업데이트 패키지 목록을 갱신&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get upgrade          # 패키지 목록과 보유한 목록을 비교하여 실제 패키지 업데이트를 수행&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install vim&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install curl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install samba    # Windows와의 파일 공유를 위해, https://help.ubuntu.com/lts/serverguide/samba.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install screen   # 터미널 하나로 multi processing을 하기 위해.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Openssh-설치&quot;&gt;&lt;a href=&quot;#Openssh-설치&quot; class=&quot;headerlink&quot; title=&quot;Openssh 설치&quot;&gt;&lt;/a&gt;Openssh 설치&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ apt-get install openssh-server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;ssh-port-변경&quot;&gt;&lt;a href=&quot;#ssh-port-변경&quot; class=&quot;headerlink&quot; title=&quot;ssh port 변경&quot;&gt;&lt;/a&gt;ssh port 변경&lt;/h2&gt;&lt;p&gt;기본은 22번 port를 사용하지만 보안을 위해 맘에 드는 port를 정해서 변경하세요. &lt;del&gt;딱히 중요한 정보가 안 들어가고 공부용이면 대충 쓰세요. 문제 생기면 밀어버리면 되니까요.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;관련해서 실무를 해본적이 없어서 보안 관리자들이 사용하는 절차에 대해서는 잘 모릅니다만 일반적으로(그럼 보안이 왜 필요한건지…)는 +10000 해서 10022번 port를 사용한다고 합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;/etc/services&lt;/code&gt; 파일에서 &lt;code&gt;ssh    22/tcp&lt;/code&gt; 및 &lt;code&gt;ssh    22/udp&lt;/code&gt; 의 port 번호를 변경합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; 파일에서 아래 부분을 변경합니다.&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# What ports, IPs and protocols we listen for&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Port 22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;  &lt;/li&gt;
&lt;li&gt;변경 후에는 &lt;code&gt;service ssh restart&lt;/code&gt; 명령을 통해 재시작합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;사용자-추가&quot;&gt;&lt;a href=&quot;#사용자-추가&quot; class=&quot;headerlink&quot; title=&quot;사용자 추가&quot;&gt;&lt;/a&gt;사용자 추가&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ adduser gildonghong&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;SAMBA-설정&quot;&gt;&lt;a href=&quot;#SAMBA-설정&quot; class=&quot;headerlink&quot; title=&quot;SAMBA 설정&quot;&gt;&lt;/a&gt;SAMBA 설정&lt;/h1&gt;&lt;h2 id=&quot;SAMBA-사용자-추가&quot;&gt;&lt;a href=&quot;#SAMBA-사용자-추가&quot; class=&quot;headerlink&quot; title=&quot;SAMBA 사용자 추가&quot;&gt;&lt;/a&gt;SAMBA 사용자 추가&lt;/h2&gt;&lt;p&gt;  &lt;code&gt;smbpasswd -a &amp;#39;username&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;SAMBA-설정-1&quot;&gt;&lt;a href=&quot;#SAMBA-설정-1&quot; class=&quot;headerlink&quot; title=&quot;SAMBA 설정&quot;&gt;&lt;/a&gt;SAMBA 설정&lt;/h2&gt;&lt;p&gt;  &lt;code&gt;/etc/samba/smb.conf&lt;/code&gt; 를 열고 [homes] 부분을 다음과 같이 수정합니다. 더 자세한 설정 방법은 &lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/samba.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu - samba&lt;/a&gt; 페이지를 참조하세요.&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[Homes]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    comment = Home Directories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    browseable = yes            # no -&amp;gt; yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    path = /home/$S             # 각 사용자가 자신의 home으로 접속되도록 변경&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    read only = no              # yes -&amp;gt; no&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;설정이 끝났다면 &lt;code&gt;service smbd restart&lt;/code&gt; 를 실행하여 samba daemon을 재시작합니다.&lt;/p&gt;
&lt;p&gt;Windows에서 시작 &amp;gt; 실행 &amp;gt;  &lt;code&gt;\\서버주소\아이디&lt;/code&gt; 로 접근할 수 있습니다.&lt;/p&gt;
&lt;h1 id=&quot;절전모드-시-네트워크가-끊기는-문제&quot;&gt;&lt;a href=&quot;#절전모드-시-네트워크가-끊기는-문제&quot; class=&quot;headerlink&quot; title=&quot;절전모드 시 네트워크가 끊기는 문제&quot;&gt;&lt;/a&gt;절전모드 시 네트워크가 끊기는 문제&lt;/h1&gt;&lt;p&gt;노트북 등이 절전모드(suspend 상태)로 전환되면 네트워크가 끊겨버립니다.&lt;/p&gt;
&lt;p&gt;이에 대한 해결은 &lt;a href=&quot;../2016-08-09-troubleshooting-linux#노트북-절전모드-진입-시-네트워크가-끊어지는-문제&quot; target=&quot;_blank&quot;&gt;노트북 절전모드 진입 시 네트워크가 끊어지는 문제&lt;/a&gt;에서 확인하실 수 있습니다.&lt;/p&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wp.smartdisk.org/?p=179&amp;amp;lang=ko&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wp.smartdisk.org/?p=179&amp;amp;lang=ko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linux.co.kr/home2/board/subbs/board.php?bo_table=lecture&amp;amp;wr_id=1342&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.linux.co.kr/home2/board/subbs/board.php?bo_table=lecture&amp;amp;wr_id=1342&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kjvvv.kr/2764&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://kjvvv.kr/2764&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://storycompiler.tistory.com/31&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://storycompiler.tistory.com/31&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linux.co.kr/home/lecture/?leccode=10644&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.linux.co.kr/home/lecture/?leccode=10644&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/09/2016-08-09-docthread-install-ubuntu/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Eclipse Setting</title>
      <link>http://lazyrodi.github.io/2016/08/08/2016-08-08-docthread-setting-eclipse/</link>
      <guid>http://lazyrodi.github.io/2016/08/08/2016-08-08-docthread-setting-eclipse/</guid>
      <pubDate>Mon, 08 Aug 2016 13:00:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;지극히 개인적인 Eclipse setting 정리.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preferences &amp;gt; General &amp;gt; Show heap status 체크&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하단에 heap memory 용
      
      </description>
      
      <content:encoded>&lt;p&gt;지극히 개인적인 Eclipse setting 정리.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preferences &amp;gt; General &amp;gt; Show heap status 체크&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하단에 heap memory 용량을 표시해주고, 휴지통 버튼 누르면 바로 memory를 확보할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preferences &amp;gt; General &amp;gt; Appearance &amp;gt; Theme 번경&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;취향따라. Dark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Window &amp;gt; Preference &amp;gt; General &amp;gt; Workspace&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Text file encoding을 Other로 선택한 후 &lt;code&gt;UTF-8&lt;/code&gt;로 변경&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tab을 Space 바꾸기 (Indent 설정)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neon을 설치하니까 자동으로 Tab이 Space 4칸으로 조정이 되어있다. (안 그랬었던 것 같은데… 뭐 좋은게 좋은거니… 엣헴)&lt;/li&gt;
&lt;li&gt;관련 설정은 Window &amp;gt; Preferences &amp;gt; General &amp;gt; Editors &amp;gt; Text Editors에 가면 &lt;code&gt;Displayed tab width&lt;/code&gt; 에서 칸 수를 설정하고 &lt;code&gt;Insert spaces for tabs&lt;/code&gt; 옵션의 체크를 통해 Tab으로 넣을 것인지 Space로 넣을 것인지 선택이 가능.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/08/2016-08-08-docthread-setting-eclipse/#disqus_thread</comments>
    </item>
    
    <item>
      <title>StringTokenizer</title>
      <link>http://lazyrodi.github.io/2016/08/07/2016-08-07-java-stringtokenizer/</link>
      <guid>http://lazyrodi.github.io/2016/08/07/2016-08-07-java-stringtokenizer/</guid>
      <pubDate>Sun, 07 Aug 2016 04:01:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;Algospot에서 이 문제 (&lt;a href=&quot;https://algospot.com/judge/problem/read/ZEROONE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://algospot.com/judge/prob
      
      </description>
      
      <content:encoded>&lt;p&gt;Algospot에서 이 문제 (&lt;a href=&quot;https://algospot.com/judge/problem/read/ZEROONE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://algospot.com/judge/problem/read/ZEROONE&lt;/a&gt;) 를 풀려다 보니 IO가 느려서 시간 초과가 계속 떴다.&lt;/p&gt;
&lt;p&gt;리플들을 보니 StringTokenizer를 이용해 시간을 줄이려고 노력했다는 것을 보았는데 난 부끄럽게도 이 Class를 본 적이 없으므로 찾아보았다.&lt;/p&gt;
&lt;p&gt;근데 IO랑 뭔 상관인지는 잘 모르겠다. 그냥 split보다 빠르게 하려고 StringTokenizer를 사용한 것 같다.&lt;/p&gt;
&lt;p&gt;아무튼 이 글과 관련 없이 함수 별 IO 속도 차이를 보기 위해서는 &lt;a href=&quot;https://algospot.com/forum/read/2496/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;여기&lt;/a&gt;를 참고하시라.&lt;/p&gt;
&lt;h1 id=&quot;결론&quot;&gt;&lt;a href=&quot;#결론&quot; class=&quot;headerlink&quot; title=&quot;결론&quot;&gt;&lt;/a&gt;결론&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;StringTokenizer: 형식이 정해진 문자열을 분리할 때 사용.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String.split(): 형식이 정해지지 않은 문자열을 분리할 때 사용. JDK1.4에 추가되었음.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;속도: StringTokenizer &amp;gt; String.split()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;String.split()은 내부적으로 정규표현식을 사용하기 때문에 많은 처리가 필요할 경우 심하게 느려짐.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;주의점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;StringTokenizer를 사용할 경우 parsing되는 데이터가 공백이라면 부적절하다. 데이터에 뭐라도 채워져 있어야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;예시로-보자&quot;&gt;&lt;a href=&quot;#예시로-보자&quot; class=&quot;headerlink&quot; title=&quot;예시로 보자&quot;&gt;&lt;/a&gt;예시로 보자&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.StringTokenizer;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String people[] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String[] &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;Matthew, 01011111111, Male, Student&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;David, 01022222222, , Swimmer&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;Maria, 01033333333, Female, Student,  &quot;&lt;/span&gt;                &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String a : people) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            StringTokenizer st = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringTokenizer(a, &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            String[] temp = a.split(&lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;----------&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;** StringTokenizer&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (st.hasMoreElements()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                System.out.println(st.nextToken());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;** String.split()&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String b : temp) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                System.out.println(b);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;----------&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;결과는-이렇다&quot;&gt;&lt;a href=&quot;#결과는-이렇다&quot; class=&quot;headerlink&quot; title=&quot;결과는 이렇다&quot;&gt;&lt;/a&gt;결과는 이렇다&lt;/h2&gt;&lt;p&gt;David에 대한 데이터를 보면 성별 정보를 빈 칸으로 해놓으니 StringTokenizer에서는 이를 무시해버렸다.&lt;/p&gt;
&lt;p&gt;Mariad의 마지막 데이터도 마찬가지이다.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** StringTokenizer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Matthew&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01011111111&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Male&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** String.split()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Matthew&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01011111111&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Male&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** StringTokenizer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;David&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01022222222&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Swimmer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** String.split()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;David&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01022222222&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Swimmer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** StringTokenizer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Maria&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01033333333&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Female&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;** String.split()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Maria&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01033333333&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Female&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Student&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;참조&quot;&gt;&lt;a href=&quot;#참조&quot; class=&quot;headerlink&quot; title=&quot;참조&quot;&gt;&lt;/a&gt;참조&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://okky.kr/article/32363&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://okky.kr/article/32363&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stylekai.tistory.com/105&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stylekai.tistory.com/105&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/07/2016-08-07-java-stringtokenizer/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Eclipse를 이용한 Python 사용</title>
      <link>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-setting-python-into-eclipse/</link>
      <guid>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-setting-python-into-eclipse/</guid>
      <pubDate>Fri, 05 Aug 2016 13:00:50 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;PyDev-설치&quot;&gt;&lt;a href=&quot;#PyDev-설치&quot; class=&quot;headerlink&quot; title=&quot;PyDev 설치&quot;&gt;&lt;/a&gt;PyDev 설치&lt;/h3&gt;&lt;p&gt;Help &amp;gt; Install new software &amp;gt; Add &amp;gt; &lt;
      
      </description>
      
      <content:encoded>&lt;h3 id=&quot;PyDev-설치&quot;&gt;&lt;a href=&quot;#PyDev-설치&quot; class=&quot;headerlink&quot; title=&quot;PyDev 설치&quot;&gt;&lt;/a&gt;PyDev 설치&lt;/h3&gt;&lt;p&gt;Help &amp;gt; Install new software &amp;gt; Add &amp;gt; &lt;/p&gt;
&lt;p&gt;Name: PyDev&lt;br&gt;Location: &lt;a href=&quot;http://pydev.org/updates&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pydev.org/updates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pyDev 체크 후 &amp;gt; Next &amp;gt; Next &amp;gt; I accept the … &amp;gt; Finish &amp;gt; Brainwy Software; pyDev; Brainwy 를 체크하여 certificate하고 &amp;gt; OK &amp;gt; restart OK&lt;/p&gt;
&lt;p&gt;New Project 생성할 때 &lt;code&gt;PyDev Project&lt;/code&gt;를 선택할 수 있게 됨.&lt;/p&gt;
&lt;p&gt;그냥 만들려고 하면 &lt;code&gt;Please configure an interpreter before procedding.&lt;/code&gt;이 뜸. 아래 설정 참조.&lt;/p&gt;
&lt;h3 id=&quot;python-interpreter-설정&quot;&gt;&lt;a href=&quot;#python-interpreter-설정&quot; class=&quot;headerlink&quot; title=&quot;python interpreter 설정&quot;&gt;&lt;/a&gt;python interpreter 설정&lt;/h3&gt;&lt;p&gt;우선, &lt;a href=&quot;http://python.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://python.org/&lt;/a&gt; 에서 python을 PC에 설치하고.&lt;/p&gt;
&lt;p&gt;Window &amp;gt; Preference &amp;gt; PyDev &amp;gt; Interpreters &amp;gt; Python Interpreter&lt;/p&gt;
&lt;p&gt;우 상단의 Quick Auto-Config를 선택하면 python path를 알아서 찾아줌.&lt;/p&gt;
&lt;p&gt;이후 Apply &amp;gt; OK&lt;/p&gt;
&lt;p&gt;다시 New Project 생성으로 가서 생성한다.&lt;/p&gt;
&lt;p&gt;Python Perspective 어쩌고 팝업 나오면 OK 해서 새 perspective를 추가한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;test.py&lt;/code&gt; 등으로 파일 생성하고, 코드 넣고, Ctrl + F11 로 빌드해서 아래쪽 콘솔에서 확인할 수 있다. 굳.&lt;/p&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-setting-python-into-eclipse/#disqus_thread</comments>
    </item>
    
    <item>
      <title>직장생활</title>
      <link>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-worklife/</link>
      <guid>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-worklife/</guid>
      <pubDate>Fri, 05 Aug 2016 10:47:50 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;입사&quot;&gt;&lt;a href=&quot;#입사&quot; class=&quot;headerlink&quot; title=&quot;입사&quot;&gt;&lt;/a&gt;입사&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ppss.kr/archives/82090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
      
      </description>
      
      <content:encoded>&lt;h1 id=&quot;입사&quot;&gt;&lt;a href=&quot;#입사&quot; class=&quot;headerlink&quot; title=&quot;입사&quot;&gt;&lt;/a&gt;입사&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ppss.kr/archives/82090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;새로운 입사자를 환영하는 방법, 웰컴키트&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;조직문화&quot;&gt;&lt;a href=&quot;#조직문화&quot; class=&quot;headerlink&quot; title=&quot;조직문화&quot;&gt;&lt;/a&gt;조직문화&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://m.media.daum.net/m/media/economic/newsview/20160601070102846&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“1분도 아까워” 현대차 직원들의 점심 레이스&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.zdnet.co.kr/column/column_view.asp?artice_id=20160809121254&amp;amp;from=Mobile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zdnet - 문제 직원은 없고, 문제상사만 있습니다&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;업무&quot;&gt;&lt;a href=&quot;#업무&quot; class=&quot;headerlink&quot; title=&quot;업무&quot;&gt;&lt;/a&gt;업무&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://brunch.co.kr/@lovewant/49&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;직장에서 깨지며 배운 100% Real 보고서 스킬&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://insight.co.kr/newsRead.php?ArtNo=71185&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;세계적인 기업 이끄는 CEO들의 사무실 10&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;퇴사&quot;&gt;&lt;a href=&quot;#퇴사&quot; class=&quot;headerlink&quot; title=&quot;퇴사&quot;&gt;&lt;/a&gt;퇴사&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ppss.kr/archives/87490&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;두 번째 퇴사&lt;/a&gt;&lt;/p&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/05/2016-08-05-docthread-worklife/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Codility</title>
      <link>http://lazyrodi.github.io/2016/08/05/2016-08-05-common-codility/</link>
      <guid>http://lazyrodi.github.io/2016/08/05/2016-08-05-common-codility/</guid>
      <pubDate>Thu, 04 Aug 2016 23:02:50 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://codility.com/programmers/lessons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/programmers/lessons/
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://codility.com/programmers/lessons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/programmers/lessons/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Iterations&quot;&gt;&lt;a href=&quot;#Iterations&quot; class=&quot;headerlink&quot; title=&quot;Iterations&quot;&gt;&lt;/a&gt;Iterations&lt;/h1&gt;&lt;p&gt;프로그램 내에서 반복되는 부분. 보통 &lt;code&gt;for&lt;/code&gt;나 &lt;code&gt;while&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;For&quot;&gt;&lt;a href=&quot;#For&quot; class=&quot;headerlink&quot; title=&quot;For&quot;&gt;&lt;/a&gt;For&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; some_variable &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range_of_values:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    loop_body&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) :&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) :&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;While&quot;&gt;&lt;a href=&quot;#While&quot; class=&quot;headerlink&quot; title=&quot;While&quot;&gt;&lt;/a&gt;While&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; some_condition:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    loop_body&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; n &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = n // &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; a &amp;lt;= n:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    c = a + b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a = b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    b = c&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Collection을-사용한-반복&quot;&gt;&lt;a href=&quot;#Collection을-사용한-반복&quot; class=&quot;headerlink&quot; title=&quot;Collection을 사용한 반복&quot;&gt;&lt;/a&gt;Collection을 사용한 반복&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;days = [&lt;span class=&quot;string&quot;&gt;&#39;Monday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Tuesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Wednesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Thursday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Friday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Saturday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Sunday&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; day &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; days:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; day&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;days = set([&lt;span class=&quot;string&quot;&gt;&#39;Monday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Tuesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Wednesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Thursday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Friday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Saturday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Sunday&#39;&lt;/span&gt;])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; day &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; days:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; day&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// set을 사용할 경우 출력 순서가 set에서 지정한 순서대로 나오지는 않는다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Monday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Tuesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Friday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Wednesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Thursday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Sunday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Saturday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// key-value 구조로 사용할 수도 있다.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;days = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;mon&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Monday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;tue&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Tuesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;wed&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Wednesday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;thu&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Thursday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;fri&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Friday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;sat&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Saturday&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;sun&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Sunday&#39;&lt;/span&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; day &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; days:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; day, &lt;span class=&quot;string&quot;&gt;&#39;stand for&#39;&lt;/span&gt;, days[day]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wed stands for Wednesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sun stands for Sunday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fri stands for Friday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tue stands for Turesday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mon stands for Monday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;thu stands for Thursday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sat stands for Saturday&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;h3 id=&quot;BinaryGap&quot;&gt;&lt;a href=&quot;#BinaryGap&quot; class=&quot;headerlink&quot; title=&quot;BinaryGap&quot;&gt;&lt;/a&gt;BinaryGap&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 45점 (이 때는 잘 몰라서 링크 안 남겨둠)&lt;br&gt;2차: 100점 - &lt;a href=&quot;https://codility.com/demo/results/training8TW2WC-EH5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training8TW2WC-EH5/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Arrays&quot;&gt;&lt;a href=&quot;#Arrays&quot; class=&quot;headerlink&quot; title=&quot;Arrays&quot;&gt;&lt;/a&gt;Arrays&lt;/h1&gt;&lt;p&gt;하나의 공간에 여러 아이템을 저장할 수 있는 자료구조.&lt;/p&gt;
&lt;h2 id=&quot;Creation&quot;&gt;&lt;a href=&quot;#Creation&quot; class=&quot;headerlink&quot; title=&quot;Creation&quot;&gt;&lt;/a&gt;Creation&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;shopping = [&lt;span class=&quot;string&quot;&gt;&#39;bread&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;butter&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;cheese&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shopping = []         &lt;span class=&quot;comment&quot;&gt;# empty list&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shopping = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * &lt;span class=&quot;number&quot;&gt;365&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# value가 0인 365개의 array&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Accesing-and-Modifying&quot;&gt;&lt;a href=&quot;#Accesing-and-Modifying&quot; class=&quot;headerlink&quot; title=&quot;Accesing and Modifying&quot;&gt;&lt;/a&gt;Accesing and Modifying&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;shopping[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;temperatures[&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shopping += [&lt;span class=&quot;string&quot;&gt;&#39;eggs&#39;&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;# 이런 식으로 array에 추가 가능.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Iterating&quot;&gt;&lt;a href=&quot;#Iterating&quot; class=&quot;headerlink&quot; title=&quot;Iterating&quot;&gt;&lt;/a&gt;Iterating&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;negative&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(temperatures)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    N = len(temperatures)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    days = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(N):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; temperatures[i] &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            days += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; days&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;위의 코드를 아래처럼 간단히 할 수 있다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;negative&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(temperatures)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    days = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; temperatures:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; t &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            days += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; days&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Basic-array-operations&quot;&gt;&lt;a href=&quot;#Basic-array-operations&quot; class=&quot;headerlink&quot; title=&quot;Basic array operations&quot;&gt;&lt;/a&gt;Basic array operations&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;len([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]) == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;] * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; == [&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] + [&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;] == [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;butter&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;bread&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;butter&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;cheese&#39;&lt;/span&gt;] == &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;연습하기&quot;&gt;&lt;a href=&quot;#연습하기&quot; class=&quot;headerlink&quot; title=&quot;연습하기&quot;&gt;&lt;/a&gt;연습하기&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    N = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(N // &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        k = N - i - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        A[i], A[k] = A[k], A[i]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;A.reverse() &lt;span class=&quot;comment&quot;&gt;# python native&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;문제-1&quot;&gt;&lt;a href=&quot;#문제-1&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;h3 id=&quot;CyclicRotation&quot;&gt;&lt;a href=&quot;#CyclicRotation&quot; class=&quot;headerlink&quot; title=&quot;CyclicRotation&quot;&gt;&lt;/a&gt;CyclicRotation&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 37점 (이 때는 잘 몰라서 링크 안 남겨둠)&lt;br&gt;2차: 100점 - &lt;a href=&quot;https://codility.com/demo/results/training35CKZE-B4V/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training35CKZE-B4V/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;OddOccurrencesInArray&quot;&gt;&lt;a href=&quot;#OddOccurrencesInArray&quot; class=&quot;headerlink&quot; title=&quot;OddOccurrencesInArray&quot;&gt;&lt;/a&gt;OddOccurrencesInArray&lt;/h3&gt;&lt;p&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingR3ZUNQ-JXX/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingR3ZUNQ-JXX/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Time-Complexity&quot;&gt;&lt;a href=&quot;#Time-Complexity&quot; class=&quot;headerlink&quot; title=&quot;Time Complexity&quot;&gt;&lt;/a&gt;Time Complexity&lt;/h1&gt;&lt;a href=&quot;/2016/08/09/2016-08-09-common-bigo/&quot; title=&quot;BIG O Complexity&quot;&gt;BIG O Complexity&lt;/a&gt;에 따로 정리.&lt;br&gt;&lt;br&gt;### TapeEquilibrium&lt;br&gt;&lt;br&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingWJH42B-PFB/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingWJH42B-PFB/&lt;/a&gt;&lt;br&gt;&lt;br&gt;### FrogJmp&lt;br&gt;&lt;br&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/training8A2TYQ-AAP/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training8A2TYQ-AAP/&lt;/a&gt;&lt;br&gt;&lt;br&gt;### PermMissingElem&lt;br&gt;&lt;br&gt;python: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingZDKEVT-JMK/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingZDKEVT-JMK/&lt;/a&gt;&lt;br&gt;&lt;br&gt;# Counting Elements&lt;br&gt;&lt;br&gt;O(n + m) 복잡도의 counting 알고리즘.&lt;br&gt;&lt;br&gt;배열 A에 들어있는 각 integer값이 몇 번이나 나오는지 count 배열에 카운팅한다.&lt;br&gt;&lt;br&gt;A = [1, 2, 3, 1, 3, 5] 라면, count = [0, 2, 1, 2, 0, 1] 이 된다.&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;counting&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    count = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * (m + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        count[A[k]] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;다음과 같은 문제가 있다.&lt;/p&gt;
&lt;p&gt;A, B 두 개의 배열과 integer m이 주어지고, 각 원소 n은 0 &amp;lt;= n &amp;lt;= m 의 크기를 갖는다.&lt;/p&gt;
&lt;p&gt;배열 A, B 에서 각각 하나의 원소를 swap하여 배열 A, B 각각의 합이 같은지 확인하고 아니면 다른 원소를 swap해보는 동작을 구현한다고 하자.&lt;/p&gt;
&lt;p&gt;가장 간단한 방법은 모든 쌍을 swap하여 계속 비교하는 것이다. 이 경우 O(n^3)의 복잡도를 갖는다.&lt;/p&gt;
&lt;p&gt;이보다 조금 나은 방법으로 처음에 전체의 합을 구한 뒤 swap 시 전체 합이 어떻게 변할지에 대해 체크하는 방법(아래 코드, O(n^2))이 있다. (실제로 swap이 발생하진 않는다.)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;slow_solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A, B, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_a = sum(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_b = sum(B)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            change = B[j] - A[i]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_a += change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_b -= change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sum_a == sum_b:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_a -= change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum_b += change&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;위의 방법보다 더 좋은 방법은 배열 A 원소의 수를 세고 배열 A와 B 요소들의 합의 차 d를 계산하는 방법이다.&lt;/p&gt;
&lt;p&gt;두 배열의 합의 차이인 d는 우리가 배열 A에서 어떤 값을 swap해야 하는지 알려준다. 왜냐하면 하나의 값을 swap할 때 두 개의 합이 동일해지기 때문이다.&lt;/p&gt;
&lt;p&gt;배열을 카운팅 한 후 이 값을 구하는 동작은 상수 시간 내에 가능하다.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fast_solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A, B, m)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = len(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_a = sum(A)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sum_b = sum(B)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    d = sum_b - sum_a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; d % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    d //= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    count = counting(A, m)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(n):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt;= B[i] - d &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; B[i] - d &amp;lt;= m &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; count[B[i] - d] &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;PermCheck&quot;&gt;&lt;a href=&quot;#PermCheck&quot; class=&quot;headerlink&quot; title=&quot;PermCheck&quot;&gt;&lt;/a&gt;PermCheck&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 30점 - &lt;a href=&quot;https://codility.com/demo/results/trainingHBR2ZE-W52/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingHBR2ZE-W52/&lt;/a&gt;&lt;br&gt;2차: 70점 - &lt;a href=&quot;https://codility.com/demo/results/trainingDW7FCK-495/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingDW7FCK-495/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;아직 paneless 문제인데 여기부터 벌써 한계가 찾아오다니… ㅠㅠ&lt;/p&gt;
&lt;h3 id=&quot;MissingInteger&quot;&gt;&lt;a href=&quot;#MissingInteger&quot; class=&quot;headerlink&quot; title=&quot;MissingInteger&quot;&gt;&lt;/a&gt;MissingInteger&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 22점 - &lt;a href=&quot;https://codility.com/demo/results/training2P6BG5-N6S/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training2P6BG5-N6S/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;FrogRiverOne&quot;&gt;&lt;a href=&quot;#FrogRiverOne&quot; class=&quot;headerlink&quot; title=&quot;FrogRiverOne&quot;&gt;&lt;/a&gt;FrogRiverOne&lt;/h3&gt;&lt;p&gt;python&lt;br&gt;1차: 54점 - &lt;a href=&quot;https://codility.com/demo/results/training3K6KVK-6NB/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/training3K6KVK-6NB/&lt;/a&gt;&lt;br&gt;2차: 100점 - &lt;a href=&quot;https://codility.com/demo/results/trainingU2PU2U-K5K/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://codility.com/demo/results/trainingU2PU2U-K5K/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;MaxCounters&quot;&gt;&lt;a href=&quot;#MaxCounters&quot; class=&quot;headerlink&quot; title=&quot;MaxCounters&quot;&gt;&lt;/a&gt;MaxCounters&lt;/h3&gt;</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/05/2016-08-05-common-codility/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo 한국어 번역</title>
      <link>http://lazyrodi.github.io/2016/08/02/2016-08-02-works-translate-hexo-site/</link>
      <guid>http://lazyrodi.github.io/2016/08/02/2016-08-02-works-translate-hexo-site/</guid>
      <pubDate>Tue, 02 Aug 2016 10:02:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;a href=&quot;http://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo.io&lt;/a&gt;에 한국어 설명이 없어서 직접 번역해 보았습니다.&lt;/p&gt;
&lt;p&gt;사이트 접속 후 우 상단에서 언어를 한국어로 변경하시거나 &lt;a 
      
      </description>
      
      <content:encoded>&lt;p&gt;&lt;a href=&quot;http://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo.io&lt;/a&gt;에 한국어 설명이 없어서 직접 번역해 보았습니다.&lt;/p&gt;
&lt;p&gt;사이트 접속 후 우 상단에서 언어를 한국어로 변경하시거나 &lt;a href=&quot;https://hexo.io/ko/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/ko/&lt;/a&gt;로 접속하시면 결과물을 확인하실 수 있습니다.&lt;/p&gt;
&lt;p&gt;영어는 잘 못하지만 &lt;del&gt;구글 번역기가 절 구원하시고&lt;/del&gt; 양이 많지 않아 하루면 끝날 줄 알았는데 꽤 많은 시간이 소요되었습니다.&lt;/p&gt;
&lt;p&gt;매뉴얼 또는 튜토리얼 그리고 회사에서는 규격을 번역하는 일은 스스로에게 굉장히 도움이 되는 일이라고 생각하고 있습니다.&lt;/p&gt;
&lt;p&gt;번역을 해보면서 얻을 수 있는 장점은 무궁무진합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;따로는 절대 공부하지 않을 영어를 직접 마주할 수 있고&lt;/li&gt;
&lt;li&gt;한 번 정리해 둠으로써 다음에는 문서를 편하게 볼 수 있습니다.&lt;/li&gt;
&lt;li&gt;심지어 자기 말투로 번역해두었기 때문에 남들의 번역서보다 가독성도 좋습니다(남들은 번역본을 욕할지언정).&lt;/li&gt;
&lt;li&gt;‘이런 때에는 이런 단어와 표현을 사용하는구나’를 배울 수 있습니다.&lt;/li&gt;
&lt;li&gt;작업을 완료했을 때 성취감을 얻을 수 있습니다.&lt;/li&gt;
&lt;li&gt;완벽하진 않지만 번역을 통해 문서가 설명하려고 하는 규격이나 동작 방식 등을 전부 다 훑어봄으로써 개요를 파악할 수 있습니다. 그리고 이 문서의 어디쯤 무슨 내용이 있었는지 기억하여 검색을 편하게 할 수 있게되죠.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;아마 제가 설명하지 못한 장점이 더욱 더 많이 있을겁니다.&lt;/p&gt;
&lt;p&gt;Hexo의 번역을 생각하게 된 이유는 우선 Hexo가 굉장히 맘에 들어서 사용하게 되었기 때문이고, 제가 가지고 있는 안 좋은 습관 떄문입니다.&lt;/p&gt;
&lt;p&gt;영문을 매끄럽게 읽어나가지 못하기 떄문에 일 할 때에도 한글로 한 번 번역을 하는 과정을 거치고 그 다음에 내용을 머리로 생각하는 것이 안 좋은 습관입니다.&lt;/p&gt;
&lt;p&gt;역량 부족이라고 해두겠습니다.&lt;/p&gt;
&lt;p&gt;결론은 한글로 된 문서를 편하게 보고 싶었습니다.&lt;/p&gt;
&lt;p&gt;번역을 할 때 어려움을 겪은 부분들을 정리해보면 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;file, thread, method, database 등의 단어를 영어로 놔둘 것인지 ‘파일’, ‘스레드’, ‘메소드’, ‘데이터베이스’ 등으로 한글로 변환할지에 대한 고민.&lt;/li&gt;
&lt;li&gt;마찬가지로 processing, reder, iterate, command 등의 표현을 어떻게 다룰 것인지에 대한 고민.&lt;/li&gt;
&lt;li&gt;직역을 할지 의역을 할지에 대한 고민.&lt;/li&gt;
&lt;li&gt;장난스런 말투를 사용할지 딱딱한 말투를 사용할지에 대한 고민.&lt;/li&gt;
&lt;li&gt;해석도 안 되는데 구글 번역기도 날 도와주지 않을 때.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;욕 먹을 고민부터 해야하는거 아니냐 하실 수도 있지만 스스로가 잘 못하는 것을 알기 때문에 그 또한 저한테 공부가 될 것이라 생각합니다.&lt;/p&gt;
&lt;p&gt;위의 과정을 마주하면서 스스로 굉장히 많이 생각하게 되어 발전할 수 있는 기회가 되었습니다.&lt;/p&gt;
&lt;p&gt;해결책도 이 공간에 턱하니 올려두면 좋겠지만 미숙해서 아직 답을 찾지 못하였습니다.&lt;/p&gt;
&lt;p&gt;여러 번 시행착오를 겪으면 되지 않을까 싶습니다. &lt;del&gt;이미 나이를 많이 먹었지만&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;여하튼 번역에 대한 결과물은 다음과 같습니다.&lt;/p&gt;
&lt;p&gt;원작자가 Pull Request를 받아줄 때 쾌감이 상당했습니다. 물론 코드가 아닌 번역이고, 원작자가 한국어를 모르니 검증 과정은 까다롭지 않았을 것이라 생각합니다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/site/pull/286&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/hexojs/site/pull/286&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;큰 일이건 작은 일이건 기분 좋은 경험이었습니다.&lt;/p&gt;
</content:encoded>
      
      <comments>http://lazyrodi.github.io/2016/08/02/2016-08-02-works-translate-hexo-site/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
